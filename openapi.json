{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.20240507",
    "title": "GigaLogistics API",
    "termsOfService": "https://platform-staging.gigacloudlogistics.com/docs/",
    "contact": {
      "name": "GigaLogistics Sales & Support",
      "email": "sa-support@gigacloudtech.com",
      "url": "https://platform-staging.gigacloudlogistics.com/docs/"
    },
    "x-logo": {
      "url": "http://ar-logistics-hk-prod.oss-cn-hongkong.aliyuncs.com/logistics-parent/openapi/DJYClogo1.png"
    },
    "description": "# Getting Started\n\nLearn how to [authenticate yourself to GIGALOGISTICS](https://platform.gigacloudlogistics.com/docs/guide/guides/oauth2.html), and then use our sandbox environment to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the error handling guide for tips.\n\nHere are some step-by-step **tutorials** to get you started:\n\n- [Learn how to create your first shipping label](https://platform.gigacloudlogistics.com/docs/guide/shipping-labels/create-label.html)\n- [Learn how to list carriers](https://platform.gigacloudlogistics.com/docs/guide/guides/list-carriers.html)\n- [Learn how to list carrier services](https://platform.gigacloudlogistics.com/docs/guide/guides/list-carrier-service.html)",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "To authenticate yourself to GIGALOGISTICS, you need to include an `Authorization` header in each API call. If you don't include a key when making an API request, or if you use an incorrect or expired key, then GIGALOGISTICS will respond with a `401 Unauthorized` error.<br> <br> Learn more about API keys in our [authentication guide](https://platform-staging.gigacloudlogistics.com/docs/guide/guides/oauth2.html)."
    },
    {
      "name": "Addresses",
      "description": "No matter your shipping volume, failed deliveries and address change surcharges cut into your bottom line and damage perception with customers. Our address validation services ensure your packages make it to the right place the first time. Learn how to leverage our address validation services here."
    },
    {
      "name": "Carriers",
      "description": "carriers"
    },
    {
      "name": "Carrier Accounts",
      "description": "carrier accounts"
    },
    {
      "name": "Warehouses",
      "description": "warehouses"
    },
    {
      "name": "Rates",
      "description": "rates"
    },
    {
      "name": "Shipments",
      "description": "Shipments are at the center of the GIGALOGISTICS API. A shipment is the first step in creating a shipping label, or creating a manifest. It's also essential for getting shipping rates."
    },
    {
      "name": "Pickup",
      "description": "Pickup request."
    },
    {
      "name": "Tracking",
      "description": "Track packages with any one of our supported carrier accounts and create tracking events to keep your customers up to date. Easily integrate real-time tracking information for shipments into your application."
    },
    {
      "name": "LTL Shipping",
      "description": "Ltl shipping."
    },
    {
      "name": "Error Codes",
      "description": " | <br><font face='Verdana' color=#160E0C size=3>**Error Code & Message**<img width=500/></font><br>                                                                                                                                          | <br><font face='Verdana' color=#160E0C size=3>**HTTP Status Code**</font><br><br>\n  |:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------\n | <br><font face='Verdana' color=#160E0C size=2>**PARTIAL_SUCCESS_ERROR**</font><br /><br><font face='Georgia' color=#595555 size=3>The request contained several errors.</font><br><br>                                         | <font face='Verdana' color=#160E0C size=2>207 Multi Status<font>\n | <br><font face='Verdana' color=#160E0C size=2>**BIZ_ERROR**</font><br /><br><font face='Georgia' color=#595555 size=3>Extension point exception.</font><br><br>                                                                | <font face='Verdana' color=#160E0C size=2>400 Bad Request<font>\n | <br><font face='Verdana' color=#160E0C size=2>**VALIDATION_ERROR**</font><br /><br><font face='Georgia' color=#595555 size=3>The request parameters that you provided contain some errors.</font><br><br>                      | <font face='Verdana' color=#160E0C size=2>400 Bad Request<font>\n | <br><font face='Verdana' color=#160E0C size=2>**NOT_SUPPORT_ERROR**</font><br /><br><font face='Georgia' color=#595555 size=3>This request system does not support.</font><br><br>                                             | <font face='Verdana' color=#160E0C size=2>400 Bad Request<font>\n | <br><font face='Verdana' color=#160E0C size=2>**METHOD_ARGUMENT_NOT_VALID**</font><br /><br><font face='Georgia' color=#595555 size=3>This request basic validation exception.</font><br><br>                                  | <font face='Verdana' color=#160E0C size=2>400 Bad Request<font>\n | <br><font face='Verdana' color=#160E0C size=2>**CARRIER_VALIDATION_ERROR**</font><br /><br><font face='Georgia' color=#595555 size=3>This request logistics company parameter verification is abnormal.</font><br><br>         | <font face='Verdana' color=#160E0C size=2>400 Bad Request<font>\n | <br><font face='Verdana' color=#160E0C size=2>**INVALID_TOKEN**</font><br /><br><font face='Georgia' color=#595555 size=3>An access token is missing,expired,revoked,malformed,or invalid for other reasons.</font><br><br>    | <font face='Verdana' color=#160E0C size=2>401 Unauthorized</font>\n | <br><font face='Verdana' color=#160E0C size=2>**ACCESS_FAILURE**</font><br /><br><font face='Georgia' color=#595555 size=3>Access to the resource is denied.</font><br><br>                                                    | <font face='Verdana' color=#160E0C size=2>403 Forbidden</font>\n | <br><font face='Verdana' color=#160E0C size=2>**RATELIMIT_EXCEEDED**</font><br /><br><font face='Georgia' color=#595555 size=3>The request was not accepted because the application has exceeded the rate limit.</font><br><br>| <font face='Verdana' color=#160E0C size=2>429 Too Many Requests</font>\n | <br><font face='Verdana' color=#160E0C size=2>**DUPLICATE_REQUEST**</font><br /><br><font face='Georgia' color=#595555 size=3>The transactionId is duplicated in the request.</font><br><br>                                   | <font face='Verdana' color=#160E0C size=2>429 Too Many Requests</font>\n | <br><font face='Verdana' color=#160E0C size=2>**THIRD_PARTY_REQUEST_ERROR**</font><br /><br><font face='Georgia' color=#595555 size=3>An exception occurred while requesting a third party.</font><br><br>                     | <font face='Verdana' color=#160E0C size=2>500 Internal Server Error</font>\n | <br><font face='Verdana' color=#160E0C size=2>**FULL_FAILED_ERROR**</font><br /><br><font face='Georgia' color=#595555 size=3>Batch request completely failed exception.</font><br><br>                                        | <font face='Verdana' color=#160E0C size=2>500 Internal Server Error</font>\n | <br><font face='Verdana' color=#160E0C size=2>**SYS_ERROR**</font><br /><br><font face='Georgia' color=#595555 size=3>Request could not be executed due to an internal server error.</font><br><br>                            | <font face='Verdana' color=#160E0C size=2>500 Internal Server Error</font>\n"
    },
    {
      "name": "Version Change History",
      "description": "This is the list of changelogs of GIGALOGISTICS new release. You can get the detail information of each version's new features and bug solutions.\n\n### Version: 1.0.20240507 (current)\n\n### Changes\n- Add Interface  [Create Shipment Async](#tag/LTL-Shipping/operation/createShipmentAsync)\n  - See the interface description for details\n- Add Interface  [Retrieve Async Shipments Result](#tag/LTL-Shipping/operation/LTLAsyncRetrieveShipmentsResult)\n  - See the interface description for details\n- Add Interface  [Pickup Request](#tag/LTL-Shipping/operation/pickup)\n  - See the interface description for details\n---\n\n### Version: 1.0.20240315_Beta\n\n#### Changes\n- Update Interface [Validate Address](#tag/Addresses/operation/AdvcStreetLevel)\n  - The interface structure has been adjusted from individual to batch, with the addition of the `clientReferenceId` field for matching responses in batch requests. \n  - A new rate limiting policy has been implemented for this interface, allowing a maximum of **2400** transactions per minute for each carrierID.\n---\n\n### Version: 1.0.20240122\n\n#### Changes\n- Update Interface [Manual push by Tracking Number](#tag/Tracking/operation/pushTracking)\n  - Add webhook callback signature verification functionality. [Click to view details](https://platform.gigacloudlogistics.com/docs/guide/track/create-webhook.html).\n- Add the address of the **Development Sandbox Server** environment, used for internal debugging and collaboration among developers. Please note that the tokens and carrierIds for each environment are distinct. Contact us to obtain them.\n---\n\n### Version: 1.0.20240111\n\n#### Changes\n\n- [Track Document](#tag/Tracking/operation/getTrackDocument) interface parameter adjustment\n  - Adjust the interface parameter request from batch to individual parameter requests.\n- Add the address for the US Production Server environment. Please be aware that when connecting to US nodes, a different token is required. Please reach out to us for obtaining the correct one.\n---\n\n### Version: 1.0.2023122801\n\n#### Changes\n\n- [Create Shipments](#tag/Shipments/operation/createShipment) interface parameter adjustment\n  - Update field `shipper`, `returnAddress`\n  > shipper.contact.companyName, returnAddress.contact.companyName, added maxmum 35 character limit.\n- Add Interface [Restart Tracking](#tag/Tracking/operation/restartTrackNum)\n    - See the interface description for details\n- Add Interface [History Track by Tracking Number](#tag/Tracking/operation/getHistoryTrackInfo)\n    - See the interface description for details\n- Add Interface [Manual push by Tracking Number](#tag/Tracking/operation/pushTracking)\n    - See the interface description for details\n- \n\n---\n\n### Version: 1.0.2023091402\n\n#### Changes\n\n- Add the address of the development sandbox server environment, used for internal debugging and collaboration among developers. Please note that the tokens and carrierIds for each environment are distinct. Contact us to obtain them.\n- \n\n---\n\n### Version: 1.0.2023083101_Beta\n\n#### Changes\n\n- Add Interface [Start Tracking a Package](#tag/Tracking/operation/registerTrackNum)\n    - See the interface description for details\n\n---\n\n### Version: 1.0.2023082401\n\n#### Changes\n\n- [Create Shipments](#tag/Shipments/operation/createShipment) interface parameter adjustment\n    - Update field `shipper`, `recipient`\n    > shipper.address.city, shipper.contact.companyName, shipper.contact.personName, recipient.address.city, \n    recipient.contact.companyName, recipient.contact.personName added minimum 3 character limit.\n\n---\n\n### Version: 1.0.2023072701\n\n#### Changes\n\n- [Create Shipments](#tag/Shipments/operation/createShipment) interface adjustment\n    - Update field `phoneNumber`\n    > Adjust `recipient.contact.phoneNumber` for GEL to be conditional required\n    - config timeout\n    > config connect timeout with 60s\n\n---\n\n### Version: 1.0.2023070601\n\n#### Changes\n\n- [Create Shipments](#tag/Shipments/operation/createShipment) interface parameter adjustment\n    - Update field `emailAddress`\n    > Adjust `recipient.contact.emailAddress` for DPD_UK to be non-required\n\n---\n\n### Version: 1.0.2023062901\n\n#### Changes\n\n- [Create Shipments](#tag/Shipments/operation/createShipment) interface parameter adjustment\n    - Update field `shipper`\n    > This field is optional when the logistics company is **WHISTL**.\n    > Add a description of the restrictions on this field for each logistics company.\n    - Update field `recipient`\n    > Add a description of the restrictions on this field for each logistics company.\n    - Update field `itemTransactionId`\n    > Applicable to `itemLines` object Add description information of this field.\n    - Update field `dimensions`\n    > Applicable to `itemLines` objects Required when the logistics company is **FedEx**.\n    - Update field `payor`\n    > Applicable to the payor information of the `paymentOption` fields, Adjust the description.\n    - Update field `phoneNumber`\n    > Applicable to the contact information of the `paymentOption` fields, When the logistics company removes the required verification for **FedEx**.\n    - Update field `labelSpecification`\n    > Add external link documentation for each logistics company label.\n\n---\n\n### Version: 1.0.2023060701\n\n#### Changes\n\n- [Create Shipments](#tag/Shipments/operation/createShipment) interface parameter adjustment\n    - Update field `stateProvince`\n    > Applicable to the address information of the `paymentOption` fields, When the logistics company removes the required verification for **FedEx**.\n    - Update field `accountNumber`\n    > Applicable to the payor information of the `paymentOption` fields, When the logistics company is **UPS**, this field must be 6 digits.\n\n---\n\n### Version: 1.0.2023052501\n\n#### Changes\n\n- [Create Shipments](#tag/Shipments/operation/createShipment) interface parameter adjustment\n    - Add new field `instructions`\n    > Applicable to the address information of the `shipper.address`fields, only applicable to GLS. \n    - Add new field `instructions`\n    > Applicable to the address information of the `recipient.address` fields, only applicable to DPD_DE, DPD_UK, GLS. \n\n---\n\n### Version: 1.0.2023051901\n\n#### Changes\n\n- [Create Shipments](#tag/Shipments/operation/createShipment) interface parameter adjustment\n    - Update field `streetLine2`\n    > Adjust `shipper.streetLine2` and `recipient.streetLine2` for DPD_DE to be non-required\n\n---\n\n### Version: 1.0.2023051601\n\n#### Changes\n\n- Adjust version number information.\n- Modify the address of the `sandbox environment` and add the address of the `pre-release environment`.\n\n---\n\n### Version: 1.0.2023051101\n\n#### Changes\n\n- Add Interface [Create Shipments asynchronously](#tag/Shipments/operation/CreateShipmentsAsync)\n    - See the interface description for details\n- Add Interface [Retrieve Async Shipments Result](#tag/Shipments/operation/AsyncRetrieveShipmentsResult)\n    - See the interface description for details\n\n- [Create Shipments](#tag/Shipments/operation/createShipment) Interface parameter verification description adjustment\n    - Update field `phoneNumber`\n    > Modify the description of this field. When the operator is `FedEx`, add a special case description. For details, please refer to the interface document. The main scope of change `shipper`, `recipient`, `payor` objects.\n    - Update field `customerReference`\n    > Modify the restrictions of each logistics company for ref1~ref5 in this field.\n\n---\n\n### Version: 1.0.2023040301\n\n#### Changes\n\n- Add Interface [Track Document](#tag/Tracking/operation/getTrackDocument)\n    - See the interface description for details\n\n---\n\n### Version: 1.0.2023032101\n\n#### Changes\n\n- [Create Shipments](#tag/Shipments/operation/createShipment) Interface parameter verification description adjustment\n    - Update field `paymentOption`\n    > Modify the verification information when using non-`SENDER` payment when the carrier is `FedEx` or `UPS`.\n    - Added the description information of the specific verification rules of each logistics company, supplemented additional auxiliary information about fields such as `serviceType`, `weight`, `dimensions`, `declaredInfo`, etc.\n\n---\n\n### Version: 1.0.2023031401\n\n#### Changes\n\n- [Create Shipments](#tag/Shipments/operation/createShipment) interface parameter adjustment\n    - Add new field `streetLine3`\n    > Applicable to the address information of the `shipper`, `recipient`, `paymentOption`, and `returnAddress` fields, only applicable to FedEx, UPS. \n    - Update field `stateProvince`\n    > Applicable to the address information of the `shipper`, `recipient`, `paymentOption`, and `returnAddress` fields, Required when the carrier is FedEx, UPS, optional in other cases.\n\n- [Create Warehouse](#tag/Warehouses/operation/createWarehouse) interface parameter adjustment\n    - update field `stateProvince`\n    > Applicable to `originAddressre`, `returnAddress` field address information, only required when the country of the address is US."
    }
  ],
  "servers": [
    {
      "url": "http://sit.gateway.orsd.tech/gw",
      "description": "Development Sandbox Server"
    },
    {
      "url": "http://uat.gateway.orsd.tech/gw",
      "description": "Sandbox Server"
    },
    {
      "url": "http://outer.pre-release.hk.gateway.orsd.tech/gw",
      "description": "Pre-Release Server"
    },
    {
      "url": "https://apis.gigacloudlogistics.com",
      "description": "Production Server"
    },
    {
      "url": "http://outer.us.gateway.orsd.tech/gw",
      "description": "US Production Server"
    }
  ],
  "paths": {
    "/oauth/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Api Authorization",
        "description": "Use this endpoint to request the OAuth token (bearer token) to authorize your application to access GigaCloud resources. You can pass this bearer token in your subsequent individual GigaCloud API endpoint requests.",
        "operationId": "apiAuthorization",
        "security": [],
        "parameters": [
          {
            "name": "content-type",
            "in": "header",
            "required": true,
            "schema": {
              "description": "This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.",
              "type": "string",
              "example": "application/x-www-form-urlencoded"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/authorization"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccessResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-ship-service/v1/advc/finder/{countryCode}/{keyword}": {
      "post": {
        "tags": [
          "Addresses"
        ],
        "summary": "Address Finder",
        "description": "The address is automatically completed according to the keyword query. currently only supports the United States.",
        "operationId": "finderAddressByKeyord",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "This is the two-letter country code. [Find more info here](https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html)",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 2
            }
          },
          {
            "name": "keyword",
            "in": "path",
            "description": "This is the keyword used to query address information.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAdvcSuccessResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-ship-service/v1/advc/postal": {
      "post": {
        "tags": [
          "Addresses"
        ],
        "summary": "Validate Postal",
        "description": "Use this endpoint to validate postal codes and service commitments. Supports city, postal, country and Origin-Destination related lookups and validations. Currently only Fedex supports this feature.",
        "operationId": "AdvcZipcodeLevel",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/postalAdvcReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postalAdvcSuccessResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-ship-service/v1/advc": {
      "post": {
        "tags": [
          "Addresses"
        ],
        "summary": "Validate Address",
        "description": "Use this endpoint to get address resolution details. These details are the outcome of validatation and resolution of the input address. An address is stated as resolved when the input address matches the known reference data. Currently only Fedex supports this feature.\n\n > **Note:** This interface imposes a throttling limit of 2400 requests per minute for a single carrierId.",
        "operationId": "AdvcStreetLevel",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/streetAdvcReq"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/streetAdvcSuccessResp"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-boot-manager/api/v1/carriers": {
      "get": {
        "tags": [
          "Carriers"
        ],
        "summary": "List Carriers",
        "description": "List all carriers that have been added to this account.",
        "operationId": "listCarrier",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarrierListResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-boot-manager/api/v1/carriers/{carrierId}": {
      "get": {
        "tags": [
          "Carriers"
        ],
        "summary": "Get Carrier By ID",
        "description": "Retrive carrier info by ID",
        "operationId": "getCarrierById",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "name": "carrierId",
            "in": "path",
            "description": "Carrier ID",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarrierOneResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-boot-manager/api/v1/carrier/{carrierId}/options": {
      "get": {
        "tags": [
          "Carriers"
        ],
        "summary": "Get Carrier Options",
        "description": "Get a list of the options available for the carrier",
        "operationId": "getCarrierOptionById",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "name": "carrierId",
            "in": "path",
            "description": "Carrier ID",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "AN array of carrier options",
                  "items": {
                    "$ref": "#/components/schemas/CarrierOptionResp"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-boot-manager/api/v1/carrier/{carrierId}/packages": {
      "get": {
        "tags": [
          "Carriers"
        ],
        "summary": "List Carrier Package Types",
        "description": "List the package types associated with the carrier",
        "operationId": "getCarrierPackageById",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "name": "carrierId",
            "in": "path",
            "description": "Carrier ID",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "AN array of carrier options",
                  "items": {
                    "$ref": "#/components/schemas/CarrierPackageResp"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-boot-manager/api/v1/carrier/{carrierId}/services": {
      "get": {
        "tags": [
          "Carriers"
        ],
        "summary": "List Carrier Services",
        "description": "List the services associated with the carrier ID",
        "operationId": "getCarrierServiceById",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "name": "carrierId",
            "in": "path",
            "description": "Carrier ID",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "AN array of carrier options",
                  "items": {
                    "$ref": "#/components/schemas/CarrierServiceResp"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/rates/quotes": {
      "post": {
        "tags": [
          "Rates"
        ],
        "summary": "Get Shipping Rates",
        "description": "Make sure you ship as cost-effectively as possible by quickly comparing rates using the GIGALOGISTICS Rates API.  As long as you have the carrier connected to your account, you'll be able to see and compare different rates and services.\n > Currently this interface is only applicable to Fedex.",
        "operationId": "getShippingRates",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/rate_shipment_request_body"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rate_success_resp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/429ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-ship-service/v1/ltl/quotes": {
      "post": {
        "tags": [
          "LTL Shipping"
        ],
        "summary": "Request a Spot Quote",
        "description": "This API endpoint allows you to obtain a spot price quote for a shipment. Spot quotes are typically discounted rates based on excess carrier capacity vs contractual rates.",
        "operationId": "requestSpotQuote",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "name": "transactionId",
            "in": "header",
            "required": true,
            "schema": {
              "description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.",
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "example": "XXXX_XXX123XXXXX"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/request_spot_quote"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/success_response_spot_quote"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-ship-service/v1/ltl/shipment/async": {
      "post": {
        "tags": [
          "LTL Shipping"
        ],
        "summary": "Create Shipment Async",
        "description": "This API endpoint is used to create a shipment asynchronously.",
        "operationId": "createShipmentAsync",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "name": "transactionId",
            "in": "header",
            "required": true,
            "schema": {
              "description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.",
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "example": "XXXX_XXX123XXXXX"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ltl_shipment_request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ltl_shipment_success_async"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-ship-service/v1/ltl/shipment/asyncResult": {
      "get": {
        "tags": [
          "LTL Shipping"
        ],
        "summary": "Retrieve Async Shipments Result",
        "description": "This endpoint helps you to process confirmed shipments asynchronously and produce results based on unique id. Cooperate `Create Shipments Async` interface used together.",
        "operationId": "LTLAsyncRetrieveShipmentsResult",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The unique identifier generated by the `Create Shipments Async` interface.",
                  "example": 6887945876680704
                }
              }
            }
          },
          "description": "A collection of unique identifiers generated by the `Create Shipments Async` interface. The maximum acceptable upper line is a group of 40."
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ltl_shipment_async_result_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/429ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-ship-service/v1/ltl/pickup": {
      "post": {
        "tags": [
          "LTL Shipping"
        ],
        "summary": "Pickup Request",
        "description": "This API endpoint is used to schedule a pickup with a carrier.",
        "operationId": "pickup",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "name": "transactionId",
            "in": "header",
            "required": true,
            "schema": {
              "description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.",
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "example": "XXXX_XXX123XXXXX"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ltl_pickup_request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ltl_pickup_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-ship-service/v1/shipment": {
      "post": {
        "tags": [
          "Shipments"
        ],
        "summary": "Create Shipments",
        "description": "Shipments are at the center of the LogisticsParent API. A shipment is the first step in creating a shipping label, or creating a manifest. It's also essential for getting shipping rates.",
        "operationId": "createShipment",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "name": "transactionId",
            "in": "header",
            "required": true,
            "schema": {
              "description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.",
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "example": "XXXX_XXX123XXXXX"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/create_shipments_request_body"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResp"
                }
              }
            }
          },
          "207": {
            "description": "The request contained several errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartSuccessResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/429ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-ship-service/v1/shipment/async": {
      "post": {
        "tags": [
          "Shipments"
        ],
        "summary": "Create Shipments asynchronously",
        "description": "If you want to quickly create invoice information, and you are not in a hurry to get the creation result, This endpoint helps you to process shipments asynchronously.",
        "operationId": "CreateShipmentsAsync",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "name": "transactionId",
            "in": "header",
            "required": true,
            "schema": {
              "description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.",
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "example": "XXXX_XXX123XXXXX"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/create_shipments_request_body"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncShipmentSuccessResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/429ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-ship-service/v1/shipment/asyncResult": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "summary": "Retrieve Async Shipments Result",
        "description": "This endpoint helps you to process confirmed shipments asynchronously and produce results based on unique id. Cooperate `Create Shipments` interface used together.",
        "operationId": "AsyncRetrieveShipmentsResult",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The unique identifier generated by the `Create Shipments` interface.",
                  "example": 6887945876680704
                }
              }
            }
          },
          "description": "A collection of unique identifiers generated by the `Create Shipments` interface. The maximum acceptable upper line is a group of 40."
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResp"
                }
              }
            }
          },
          "207": {
            "description": "The request contained several errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartSuccessResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/429ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-ship-service/v1/shipment/cancel": {
      "put": {
        "tags": [
          "Shipments"
        ],
        "summary": "Cancel Shipment",
        "description": "Mark a shipment cancelled, if it is no longer needed or being used by your organized.",
        "operationId": "cancelShipment",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/cencel_shipments_request_body"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelSuccessResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-ship-service/v1/shipment/{gigaTrackingNumber}/cancel": {
      "put": {
        "tags": [
          "Shipments"
        ],
        "summary": "Cancel Shipment By GigaTrackingNumber",
        "description": "Mark a shipment cancelled, According to Giga tracking number, if it is no longer needed or being used by your organized.",
        "operationId": "cancelShipmentByGigaTrackingNumber",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "name": "gigaTrackingNumber",
            "in": "path",
            "description": "Giga tracking number",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelSuccessResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-ship-service/v1/pickup/create": {
      "post": {
        "tags": [
          "Pickup"
        ],
        "summary": "Pickup Creation",
        "description": "Schedule a package pickup with a carrier.This API is suitable for GEL .",
        "operationId": "pickupCreation",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/pickup_create_request_body"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickupSuccessResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-boot-manager/api/v1/warehouses": {
      "get": {
        "tags": [
          "Warehouses"
        ],
        "summary": "List Warehouses",
        "description": "Retrieve a list of warehouses associated with this account.",
        "operationId": "listWarehouses",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhListSuccessResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Warehouses"
        ],
        "summary": "Create Warehouse",
        "description": "Create a warehouse location that you can use to create shipping items by simply passing in the generated warehouse id. If the return address is not supplied in the request body then it is assumed that the origin address is the return address as well",
        "operationId": "createWarehouse",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAndUpdateReq"
              }
            }
          },
          "description": "requestBody description",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhOneSuccessResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-boot-manager/api/v1/warehouses/{warehouseId}": {
      "parameters": [
        {
          "name": "warehouseId",
          "in": "path",
          "description": "Warehouse ID",
          "required": true,
          "schema": {
            "type": "string",
            "minLength": 1,
            "maxLength": 25
          }
        }
      ],
      "get": {
        "tags": [
          "Warehouses"
        ],
        "summary": "Get Warehouse By Id",
        "description": "Retrieve warehouse data based on the warehouse ID\n",
        "operationId": "getWarehouseById",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhOneSuccessResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Warehouses"
        ],
        "summary": "Update WareHouse By Id",
        "description": "Update Warehouse object information\n",
        "operationId": "updateWarehouseById",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAndUpdateReq"
              }
            }
          },
          "description": "requestBody description",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhOneSuccessResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Warehouses"
        ],
        "summary": "Delete Warehouse By ID",
        "description": "Delete a warehouse by ID\n",
        "operationId": "removeWarehouseById",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Used to judge whether it is successful.",
                      "example": true,
                      "default": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-ship-service/v1/track/document/{gigaTrackingNumber}": {
      "get": {
        "tags": [
          "Tracking"
        ],
        "summary": "Track Document",
        "description": "This endpoint helps you to request a letter that includes the recipient's signature as a proof of delivery. Signature Proof of Delivery is the only document supported by this endpoint. (Customers are able to retrieve package POD files by submitting real-time requests to logistics companies.)",
        "operationId": "getTrackDocument",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "name": "gigaTrackingNumber",
            "in": "path",
            "description": "Giga tracking number",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTrackingDocumentResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-tracking-service/v1/tracking/register": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "Start Tracking",
        "description": "Allows you to subscribe to tracking updates for a package. You specify the carrier_code and tracking_number of the package, and receive notifications via [webhooks](https://platform-staging.gigacloudlogistics.com/docs/guide/track/create-webhook.html) whenever the shipping status changes. The maximum number of subscriptions for a group is 600.",
        "externalDocs": {
          "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/track/track-package.html#considerations",
          "description": "Find more info here"
        },
        "operationId": "registerTrackNum",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "The maximum number of subscriptions for a group is 600.",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/register_track_request_body"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/register_tracking_resp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-tracking-service/v1/tracking/reTrack": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "Restart Tracking",
        "description": "Restart the logistics order number that has stopped tracking to automatic tracking;",
        "operationId": "restartTrackNum",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The giga waybill number issued by the logistics center.",
                  "example": "GCL1234567890120"
                }
              }
            }
          },
          "description": "It is used to receive the request body of giga waybill number array type. The maximum acceptable upper line is a group of 40."
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/restart_tracking_resp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-tracking-service/v1/tracking/getTrackHistoryInfo": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "History Track by Tracking Number",
        "description": "This endpoint allows customers to access package history information, providing tracking details without initiating a request to the logistics company.",
        "operationId": "getHistoryTrackInfo",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The giga waybill number issued by the logistics center.",
                  "example": "GCL1234567890120"
                }
              }
            }
          },
          "description": "It is used to receive the request body of giga waybill number array type. The maximum acceptable upper line is a group of 40."
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tracking_info_resp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    },
    "/cloud-tracking-service/v1/tracking/push": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "Manual push by Tracking Number",
        "description": "After successfully submitting the interface, the corresponding tracking number will enter the task queue, and the push to your [webhook](https://platform-staging.gigacloudlogistics.com/docs/guide/track/create-webhook.html) interface will be initiated by the global scheduler.",
        "operationId": "pushTracking",
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The giga waybill number issued by the logistics center.",
                  "example": "GCL1234567890120"
                }
              }
            }
          },
          "description": "It is used to receive the request body of giga waybill number array type. The maximum acceptable upper line is a group of 40."
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/restart_tracking_resp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401ErrorResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403ErrorResp"
                }
              }
            }
          },
          "500": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResp"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/503ErrorResp"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "authorization": {
        "type": "object",
        "properties": {
          "grant_type": {
            "description": "Example: `client_credentials`<br> Specify Type of customer requesting the Oauth token.",
            "type": "string",
            "example": "client_credentials"
          },
          "client_id": {
            "description": "Example: `xxxxxxxxx`<br> Specify the Client ID also known as API Key received during gigacloud Developer portal registration.",
            "type": "string",
            "example": "xxxxxxxx"
          },
          "client_secret": {
            "description": "Example: `xxxxxxxxx`<br> Specify the Client secret also known as Secret Key received during gigacloud Developer portal registration.",
            "type": "string",
            "example": "xxxxxxxx"
          }
        }
      },
      "AuthSuccessResp": {
        "type": "object",
        "properties": {
          "access_token": {
            "description": "This is an encrypted OAuth token used to authenticate your API requests. Use it in the authorization header of your API requests.",
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX……"
          },
          "token_type": {
            "description": "This is a token type. In this case, it is 'bearer authentication'.",
            "type": "string",
            "example": "Bearer"
          },
          "expires_in": {
            "description": "Indicates the token expiration time in seconds. The standard token expiration time is one hour.",
            "type": "integer",
            "example": 3600
          },
          "scope": {
            "description": "Indicates the scope of authorization provided to the consumer.",
            "type": "string",
            "example": "ALL"
          }
        }
      },
      "AuthErrorResp": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Indicates the error code.",
            "type": "string",
            "example": "invalid_client"
          },
          "error_description": {
            "description": "Indicates the API error alert message.",
            "type": "string",
            "example": "Invalid client credentials"
          }
        }
      },
      "addressInfoBySearch": {
        "type": "object",
        "properties": {
          "countryCode": {
            "description": "This is ISO alpha 2 country code.",
            "type": "string",
            "example": "US",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html"
            }
          },
          "stateOrProvinceCode": {
            "description": "This is state or province code.",
            "type": "string",
            "example": "ME"
          },
          "city": {
            "description": "This is city name.",
            "type": "string",
            "example": "MADAWASKA"
          },
          "zipcode": {
            "description": "This is the postal code.",
            "type": "string",
            "example": "04756",
            "maxLength": 5,
            "minLength": 5
          }
        },
        "required": [
          "countryCode",
          "stateOrProvinceCode",
          "city",
          "zipcode"
        ]
      },
      "SearchAdvcSuccessResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The descriptive data of the requested shipment.",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/addressInfoBySearch"
                }
              ]
            }
          },
          "empty": {
            "description": "This indicates that data is not empty",
            "type": "boolean",
            "example": false
          },
          "notEmpty": {
            "description": "This indicates that datawei is empty",
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "success",
          "data",
          "empty",
          "notEmpty"
        ]
      },
      "400ErrorResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "default": false,
            "example": false
          },
          "errors": {
            "description": "The errors associated with the failed API call",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "source": {
                  "type": "string",
                  "enum": [
                    "CARRIER",
                    "GIGA"
                  ],
                  "description": "The source of the error, as indicated by the name this informs us if the API call failed because of the carrier or the platform itself.",
                  "example": "GIGA"
                },
                "code": {
                  "description": "The error code specified for the failed API Call.[Click here to see more](https://platform-staging.gigacloudlogistics.com/docs/guide/overview/error-codes.html);",
                  "type": "string",
                  "example": "VALIDATION_ERROR"
                },
                "message": {
                  "type": "string",
                  "description": "The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time.",
                  "example": "Failed to obtain the logistics account information. No corresponding data found."
                }
              },
              "required": [
                "source",
                "code",
                "message"
              ]
            }
          }
        },
        "required": [
          "success",
          "errors"
        ]
      },
      "401ErrorResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "default": false,
            "example": false
          },
          "errors": {
            "description": "The errors associated with the failed API call",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "source": {
                  "type": "string",
                  "enum": [
                    "CARRIER",
                    "GIGA"
                  ],
                  "description": "The source of the error, as indicated by the name this informs us if the API call failed because of the carrier or the platform itself.",
                  "example": "GIGA"
                },
                "code": {
                  "description": "The error code specified for the failed API Call.[Click here to see more](https://platform-staging.gigacloudlogistics.com/docs/guide/overview/error-codes.html);",
                  "type": "string",
                  "example": "INVALID_TOKEN"
                },
                "message": {
                  "type": "string",
                  "description": "An error message associated with the failed API call",
                  "example": "An access token is missing,expired,revoked,malformed,or invalid for other reasons."
                }
              },
              "required": [
                "source",
                "code",
                "message"
              ]
            }
          }
        },
        "required": [
          "success",
          "errors"
        ]
      },
      "403ErrorResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "default": false,
            "example": false
          },
          "errors": {
            "description": "The errors associated with the failed API call",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "source": {
                  "type": "string",
                  "enum": [
                    "CARRIER",
                    "GIGA"
                  ],
                  "description": "The source of the error, as indicated by the name this informs us if the API call failed because of the carrier or the platform itself.",
                  "example": "GIGA"
                },
                "code": {
                  "description": "The error code specified for the failed API Call.[Click here to see more](https://platform-staging.gigacloudlogistics.com/docs/guide/overview/error-codes.html);",
                  "type": "string",
                  "example": "ACCESS_FAILURE"
                },
                "message": {
                  "type": "string",
                  "description": "An error message associated with the failed API call",
                  "example": "Access to the resource is denied."
                }
              },
              "required": [
                "source",
                "code",
                "message"
              ]
            }
          }
        },
        "required": [
          "success",
          "errors"
        ]
      },
      "500ErrorResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "default": false,
            "example": false
          },
          "errors": {
            "description": "The errors associated with the failed API call",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "source": {
                  "type": "string",
                  "enum": [
                    "CARRIER",
                    "GIGA"
                  ],
                  "description": "The source of the error, as indicated by the name this informs us if the API call failed because of the carrier or the platform itself.",
                  "example": "GIGA"
                },
                "code": {
                  "description": "The error code specified for the failed API Call.[Click here to see more](https://platform-staging.gigacloudlogistics.com/docs/guide/overview/error-codes.html);",
                  "type": "string",
                  "example": "SYS_ERROR"
                },
                "message": {
                  "type": "string",
                  "description": "An error message associated with the failed API call",
                  "example": "Request could not be executed due to an internal server error."
                }
              },
              "required": [
                "source",
                "code",
                "message"
              ]
            }
          }
        },
        "required": [
          "success",
          "errors"
        ]
      },
      "503ErrorResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "default": false,
            "example": false
          },
          "errors": {
            "description": "The errors associated with the failed API call",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "source": {
                  "type": "string",
                  "enum": [
                    "CARRIER",
                    "GIGA"
                  ],
                  "description": "The source of the error, as indicated by the name this informs us if the API call failed because of the carrier or the platform itself.",
                  "example": "GIGA"
                },
                "code": {
                  "description": "The error code specified for the failed API Call.[Click here to see more](https://platform-staging.gigacloudlogistics.com/docs/guide/overview/error-codes.html);",
                  "type": "string",
                  "example": "SERVICE_UNAVAILABLE"
                },
                "message": {
                  "type": "string",
                  "description": "An error message associated with the failed API call",
                  "example": "The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
                }
              },
              "required": [
                "source",
                "code",
                "message"
              ]
            }
          }
        },
        "required": [
          "success",
          "errors"
        ]
      },
      "carrier_option_fedex": {
        "type": "string",
        "description": "Specify the four letter code of a FedEx operating company that meets your requirements",
        "enum": [
          "FDXE",
          "FDXG",
          "FXSP",
          "FDXC",
          "FXCC"
        ],
        "example": "FDXE"
      },
      "postalAdvcReq": {
        "type": "object",
        "properties": {
          "carrierId": {
            "description": "The carrier account that is billed for the shipping charges.",
            "type": "string",
            "example": "GLSXXXXXXXXX"
          },
          "carrierCode": {
            "description": "Specify the four letter code of a operating company that meets your requirements",
            "oneOf": [
              {
                "$ref": "#/components/schemas/carrier_option_fedex"
              }
            ]
          },
          "countryCode": {
            "description": "The two-letter code used to identify a country.",
            "type": "string",
            "example": "US",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html"
            }
          },
          "stateOrProvinceCode": {
            "description": "This is the state or province code. Format and presence of this field will vary, depending on country.",
            "type": "string",
            "example": "CA"
          },
          "zipcode": {
            "description": "Identification code of a region (usally small) for easier and accurate mail/package delivery. The format and presence of this field may vary depending on the country.",
            "type": "string",
            "example": "04756"
          },
          "shipDate": {
            "description": "Specify the date on which the package is to be shipped. The specified date should not be the current date or any date, 10 days after the current date. The date format must be `YYYY-MM-DD`.",
            "type": "string",
            "example": "2019-10-04"
          }
        },
        "required": [
          "carrierId",
          "carrierCode",
          "countryCode",
          "stateOrProvinceCode",
          "zipcode",
          "shipDate"
        ]
      },
      "addressInfoByPostal": {
        "type": "object",
        "properties": {
          "countryCode": {
            "description": "The two-letter code used to identify a country.",
            "type": "string",
            "example": "US",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html"
            }
          },
          "stateOrProvinceCode": {
            "description": "This is the state or province code. Format and presence of this element will vary, depending on country.",
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "example": "ME"
          },
          "cityFirstInitials": {
            "description": "Initials of the City.",
            "type": "string",
            "example": "B"
          },
          "zipcode": {
            "description": "This is the postal code.",
            "type": "string",
            "example": "04756"
          },
          "alterMessage": {
            "description": "This is specifies Alert details returned in the reply such as code, message and any other parameters.",
            "type": "string"
          },
          "locationDescriptions": {
            "description": "This object specifies location details returned in the reply such as location ID, service area and airport ID etc.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "locationId": {
                  "description": "Location id of the postal code provided.",
                  "type": "string",
                  "example": "MAAPD"
                },
                "locationNumber": {
                  "description": "Location number of the postal code provided.",
                  "type": "string",
                  "example": 6955
                },
                "serviceArea": {
                  "description": "Service area of the postal code provided.",
                  "type": "string",
                  "example": "AA"
                },
                "airportId": {
                  "description": "Airport Id of the postal code provided.",
                  "type": "string",
                  "example": "BLR"
                }
              },
              "required": [
                "locationId",
                "locationNumber",
                "serviceArea",
                "airportId"
              ]
            }
          }
        }
      },
      "postalAdvcSuccessResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The descriptive data of the requested shipment.",
            "allOf": [
              {
                "$ref": "#/components/schemas/addressInfoByPostal"
              }
            ]
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "streetAdvcReq": {
        "type": "object",
        "properties": {
          "carrierId": {
            "description": "The carrier account that is billed for the shipping charges.",
            "type": "string",
            "example": "GLSXXXXXXXXX"
          },
          "advcStreetDetail": {
            "description": "Indicate the address to be validated and resolved. This includes the address details, such as streetline, state or province code, country code and postal code.\n\n > Note: Up to 50 of these can be submitted in a single request.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "clientReferenceId": {
                  "description": "Client Reference Id. This element is also returned in the reply and helps you match the request to the reply.",
                  "type": "string",
                  "example": "test-01",
                  "maxLength": 50
                },
                "countryCode": {
                  "description": "The two-letter code used to identify a country.",
                  "type": "string",
                  "example": "US",
                  "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html"
                  }
                },
                "stateOrProvinceCode": {
                  "description": "This is the state or province code. Format and presence of this field will vary, depending on country.",
                  "type": "string",
                  "example": "CA"
                },
                "city": {
                  "description": "Indicate the name of city, town, etc.",
                  "type": "string",
                  "example": "MADAWASKA"
                },
                "zipcode": {
                  "description": "Identification code of a region (usally small) for easier and accurate mail/package delivery. The format and presence of this field may vary depending on the country.",
                  "type": "string",
                  "example": "04756"
                },
                "street1": {
                  "description": "The first line of the street address. For some addresses, this may be the only line. Other addresses may require 2 or 3 lines.\n - At least one line is required for a valid physical address; empty lines should not be included.\n - Maximum up to three lines & no error check if entered more than this limit.\n - Recommended limit per line is 35 characters.",
                  "type": "string",
                  "example": "7372 PARKRIDGE BLVD"
                },
                "street2": {
                  "description": "The second line of the street address. For some addresses, this line may not be needed.",
                  "type": "string",
                  "example": "APT 286, 2903 sprank"
                },
                "street3": {
                  "description": "The third line of the street address. For some addresses, this line may not be needed.",
                  "type": "string"
                }
              },
              "required": [
                "carrierId",
                "clientReferenceId",
                "carrierCode",
                "countryCode",
                "stateOrProvinceCode",
                "zipcode",
                "city",
                "street1"
              ]
            }
          }
        },
        "required": [
          "carrierId",
          "advcStreetDetail"
        ]
      },
      "advcToken": {
        "type": "object",
        "properties": {
          "changed": {
            "description": "Indicates if it has changed from the input address.",
            "type": "boolean"
          },
          "value": {
            "description": "Indicates the changed value.",
            "type": "string",
            "example": "SAN JUAN"
          }
        }
      },
      "fedex_advc_street_detail": {
        "type": "object",
        "properties": {
          "clientReferenceId": {
            "description": "Client Reference Id. This element is also returned in the reply and helps you match the request to the reply.",
            "type": "string",
            "maxLength": 50,
            "example": "test-01"
          },
          "streetLinesToken": {
            "description": "Indicates the resolved street address lines.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "7372 PARKRIDGE BLVD",
              "APT 286, 2903 sprank"
            ]
          },
          "city": {
            "description": "This is resolved city name.",
            "type": "string",
            "example": "MADAWASKA"
          },
          "stateOrProvinceCode": {
            "description": "This is the state or province code. Format and presence of this element will vary, depending on country.",
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "example": "ME"
          },
          "countryCode": {
            "description": "This is resolved ISO alpha 2 country code.",
            "type": "string",
            "example": "US",
            "maxLength": 2,
            "minLength": 2
          },
          "customerMessage": {
            "description": "This is specifies Alert details returned in the reply such as code, message and any other parameters.\n Following are informational code and messages with respect to the results:\n - INVALID.SUITE.NUMBER - Invalid or missing Apartment/Suite\n - SUITE.NUMBER.REQUIRED - Invalid or missing Apartment/Suite\n - PARTIAL.STREET.MATCH - A street address is required for delivery. The entered address is a street number range.\n - MISSING.OR.AMBIGUOUS.DIRECTIONAL - Invalid or missing address directional.\n - INTERPOLATED.STREET.ADDRESS - Unable to confirm exact street number for the entered street name. The address falls within a valid range for the street name.\n - RRHC.CONVERSION - A street address is required for delivery. The address has been converted from a rural route.",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "cityToken": {
            "description": "This is the resolved city name with a token. The token is an indication to the changes made.",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/advcToken"
                }
              ]
            }
          },
          "postalCodeToken": {
            "description": "This is the resolved postal code with a token. The token is an indication to the changes made.",
            "allOf": [
              {
                "$ref": "#/components/schemas/advcToken"
              }
            ]
          },
          "parsedPostalCode": {
            "description": "The postal code specified in a form that is supported by USPS as base, secondary and tertiary.\\n - Base - AddOn - DeliveryPoint",
            "example": "75063-8659",
            "type": "object",
            "properties": {
              "base": {
                "type": "string",
                "description": "Indicates the base.",
                "example": "00926"
              },
              "addOn": {
                "type": "string",
                "example": "2716",
                "description": "Indicates the secondary value in Postal Code."
              },
              "deliveryPoint": {
                "type": "string",
                "example": "50",
                "description": "Indicates the tertiary value in Postal Code."
              }
            }
          },
          "classification": {
            "type": "string",
            "enum": [
              "MIXED",
              "UNKNOWN",
              "BUSINESS",
              "RESIDENTIAL"
            ],
            "description": "This is the classification type of a FedEx address.Valid values:\n - BUSINESS\n - RESIDENTIAL\n - MIXED (If it is a multi-tenant based address and contains both business and residential units.)\n - UNKNOWN (If just a zip code is provided, Address Validation Service returns `unknown` for the business/residential classification.)",
            "example": "UNKNOWN"
          },
          "postOfficeBox": {
            "type": "boolean",
            "description": "Indicates if the resolved address is a P.O. Box.",
            "example": false
          },
          "normalizedStatusNameDPV": {
            "type": "boolean",
            "description": "Indicates the presence of a delivery point such as a mailbox. Provided only for US addresses that are standardized against Postal Data.",
            "example": false
          },
          "standardizedStatusNameMatchSource": {
            "type": "string",
            "description": "Indicates the source from which the standardized address is matched.",
            "example": "Postal or Map."
          },
          "resolutionMethodName": {
            "type": "string",
            "description": "Indicates the resolution method used to resolve the address.Valid values: - USPS_VALIDATE\\n - CA_VALIDATE\\n - GENERIC_VALIDATE\\n - NAVTEQ_GEO_VALIDATE\\n - TELEATLAS_GEO_VALIDATE\\n",
            "example": "USPS_VALIDATE"
          },
          "ruralRouteHighwayContract": {
            "type": "boolean",
            "description": "Indicates if the resolved address is a Rural Route or Highway Contract (US only). It returns true if it is rural route.",
            "example": true
          },
          "generalDelivery": {
            "type": "boolean",
            "description": "Indicates the mail service is for those without permanent address. The mails for this address are held at a post office. Only applies to addresses that can be standardized against Postal Data. Not provided for US Geo Validated addresses. Note: Only returned when the address cannot be resolved.",
            "example": false
          },
          "attributes": {
            "type": "object",
            "description": "These are the key-value pair as additional information returned along with the address processed by the system. These attribute will list what is working and what is not on the input address. For More information, look in to Chapter Address Attributes in the Overview.",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://developer.fedex.com/api/en-us/guides/api-reference.html#addressattributes"
            }
          }
        },
        "required": [
          "clientReferenceId"
        ]
      },
      "fedex_advc_street_level": {
        "type": "object",
        "properties": {
          "resolvedAddress": {
            "description": "Indicates the list of resolved addresses. The detailed resolved address includes city, state, postal information, and resolution method.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fedex_advc_street_detail"
            }
          },
          "alerts": {
            "description": "Indicates API Alerts includes alert type, alert code, and alert message that is received when the address is resolved.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Indicates the API alert code."
                },
                "message": {
                  "type": "string",
                  "description": "Indicates the API alert message."
                },
                "alertType": {
                  "type": "string",
                  "enum": [
                    "NOTE",
                    "WARNING"
                  ],
                  "description": "Indicates the API alert type."
                }
              }
            }
          }
        },
        "required": [
          "resolvedAddress"
        ]
      },
      "streetAdvcSuccessResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The descriptive data of the requested shipment.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/fedex_advc_street_level"
              }
            ]
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "Service": {
        "type": "object",
        "properties": {
          "carrierId": {
            "description": "A string that uniquely identifies the carrier",
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "example": "auto_fund_not_supported"
          },
          "carrierCode": {
            "description": "A string that uniquely identifies a GIGALOGISTICS resource, such as a carrier, label, shipment, etc.",
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "example": "Body of request cannot be null."
          },
          "serviceCode": {
            "description": "service code",
            "externalDocs": {
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping/specify-carrier-service.html",
              "description": "Find more info here"
            },
            "type": "string",
            "minLength": 1,
            "example": "test01"
          },
          "name": {
            "description": "User friendly service name",
            "type": "string",
            "minLength": 1,
            "example": "test"
          },
          "domestic": {
            "description": "Supports domestic shipping",
            "type": "boolean",
            "example": false
          },
          "international": {
            "description": "Supports international shipping.",
            "type": "boolean",
            "example": false
          },
          "isMultiPackageSupported": {
            "description": "Carrier supports multiple packages per shipment",
            "type": "boolean",
            "example": false
          }
        }
      },
      "CarrierDimensions": {
        "type": "object",
        "properties": {
          "unit": {
            "description": "The dimension units that are supported by GigaLogistics.",
            "type": "string",
            "enum": [
              "CM",
              "IN"
            ],
            "example": "CM"
          },
          "length": {
            "description": "The length of the package, in the specified unit",
            "type": "number",
            "format": "double",
            "minLength": 0,
            "example": 0
          },
          "width": {
            "description": "The width of the package, in the specified unit",
            "type": "number",
            "format": "double",
            "minLength": 0,
            "example": 0
          },
          "height": {
            "description": "The length of the package, in the specified unit",
            "type": "number",
            "format": "double",
            "minLength": 0,
            "example": 0
          }
        },
        "required": [
          "unit",
          "length",
          "width",
          "height"
        ]
      },
      "Package": {
        "type": "object",
        "properties": {
          "packageId": {
            "description": "A string that uniquely identifies the package.",
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "example": "test"
          },
          "packageCode": {
            "description": "A package type",
            "type": "string",
            "minLength": 1,
            "example": "large_package"
          },
          "name": {
            "description": "name",
            "type": "string",
            "minLength": 1,
            "example": "test"
          },
          "dimensions": {
            "description": "An error message associated with the failed API call",
            "$ref": "#/components/schemas/CarrierDimensions"
          },
          "description": {
            "description": "Provides a helpful description for the custom package.",
            "type": "string",
            "example": "remark"
          }
        },
        "required": [
          "packageCode",
          "name"
        ]
      },
      "Option": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of advanced option",
            "type": "string",
            "minLength": 1,
            "example": "COD"
          },
          "defaultValue": {
            "description": "Default value of option",
            "type": "string",
            "minLength": 1,
            "example": "COD"
          },
          "description": {
            "description": "Description of option",
            "type": "string",
            "minLength": 0,
            "example": "remark"
          }
        },
        "required": [
          "errorCode",
          "message"
        ]
      },
      "Carrier": {
        "type": "object",
        "properties": {
          "carrierId": {
            "description": "A string that uniquely identifies the carrier.",
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "example": "se-28529731"
          },
          "carrierCode": {
            "description": "A string that uniquely identifies the carrier.",
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "example": "se-28529731"
          },
          "accountNumber": {
            "description": "The account number that the carrier is connected to.",
            "type": "string",
            "minLength": 1,
            "example": "account_570827"
          },
          "requiresFundedAmount": {
            "description": "Indicates whether the carrier requires funding to use its services",
            "type": "boolean",
            "example": false
          },
          "balance": {
            "description": "Current available balance",
            "type": "number",
            "format": "double",
            "minLength": 0,
            "example": 1.23
          },
          "nickname": {
            "description": "Nickname given to the account when initially setting up the carrier.",
            "type": "string",
            "minLength": 1,
            "example": "name"
          },
          "friendlyName": {
            "description": "Screen readable name",
            "type": "string",
            "minLength": 1,
            "example": "name"
          },
          "primary": {
            "description": "Is this the primary carrier that is used by default when no carrier is specified in label/shipment creation",
            "type": "boolean",
            "example": false
          },
          "hasMultiPackageSupportingServices": {
            "description": "Carrier supports multiple packages per shipment",
            "type": "boolean",
            "example": false
          },
          "supportsLabelMessages": {
            "description": "The carrier supports adding custom label messages to an order.",
            "type": "boolean",
            "example": false
          },
          "services": {
            "description": "A list of services that are offered by the carrier",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Service"
                }
              ]
            }
          },
          "packages": {
            "description": "A list of package types that are supported by the carrier",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Package"
                }
              ]
            }
          },
          "options": {
            "description": "A list of options that are available to that carrier",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Option"
                }
              ]
            }
          }
        }
      },
      "CarrierListResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The carrier response body",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Carrier"
                }
              ]
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "CarrierOneResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The carrier response body",
            "allOf": [
              {
                "$ref": "#/components/schemas/Carrier"
              }
            ]
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "CarrierOptionResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The carrier response body",
            "allOf": [
              {
                "$ref": "#/components/schemas/Option"
              }
            ]
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "CarrierPackageResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The carrier response body",
            "allOf": [
              {
                "$ref": "#/components/schemas/Package"
              }
            ]
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "CarrierServiceResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The carrier response body",
            "allOf": [
              {
                "$ref": "#/components/schemas/Service"
              }
            ]
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "rate_address": {
        "type": "object",
        "properties": {
          "countryCode": {
            "description": "This is the two-letter country code.",
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "example": "US",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html"
            }
          },
          "stateOrProvinceCode": {
            "description": "This is a placeholder for state or province code.",
            "type": "string",
            "maxLength": 35,
            "example": "TN"
          },
          "city": {
            "description": "The name of city, town of the recipient.Max length is 35.",
            "type": "string",
            "maxLength": 35,
            "example": "ANTIOCH"
          },
          "zipCode": {
            "description": "This is the postal code. Validity check exists.",
            "type": "string",
            "maxLength": 10,
            "example": 65247
          },
          "addressType": {
            "description": "Indicate this address type, Only `RESIDENTIAL` means residential (private).",
            "type": "string",
            "enum": [
              "RESIDENTIAL",
              "BUSINESS",
              "PARCELSHOP"
            ],
            "example": "RESIDENTIAL"
          }
        },
        "required": [
          "countryCode",
          "zipCode"
        ]
      },
      "gg_id": {
        "title": "",
        "type": "string",
        "minLength": 1,
        "maxLength": 25,
        "pattern": "^WH(-[a-z0-9]+)+$",
        "example": "se-28529731",
        "description": "A string that uniquely identifies a GIGALOGISTICS resource, such as a carrier, label, shipment, etc."
      },
      "signature_option_fedex": {
        "type": "object",
        "properties": {
          "signatureOptionType": {
            "description": "Valid Values:\n\n - `ADULT`: Adult signature required, at recipient address.\n\n - `DIRECT`: Signature required, at recipient address.\n\n - `INDIRECT`: Signature required, alternate address is accepted.This option is available for residential deliveries only\n\n - `NO_SIGNATURE_REQUIRED`: Signature is not required.\n\n - `SERVICE_DEFAULT`: Signature handled as per current Service Guide.",
            "type": "string",
            "enum": [
              "NO_SIGNATURE_REQUIRED",
              "SERVICE_DEFAULT",
              "INDIRECT",
              "DIRECT",
              "ADULT"
            ],
            "example": "DIRECT"
          }
        }
      },
      "Weight": {
        "type": "object",
        "properties": {
          "value": {
            "description": "The weight, in the specified unit",
            "type": "number",
            "format": "double",
            "example": 12.3
          },
          "units": {
            "description": "The possible weight unit values.",
            "type": "string",
            "enum": [
              "KG",
              "LB"
            ],
            "example": "KG",
            "title": "Unit information"
          }
        },
        "required": [
          "value",
          "units"
        ]
      },
      "Dimensions": {
        "type": "object",
        "properties": {
          "units": {
            "description": "The dimension units that are supported by GIGALOGISTICS.",
            "type": "string",
            "enum": [
              "CM",
              "IN"
            ],
            "title": "Unit information"
          },
          "length": {
            "description": "Indicate the length of the package.",
            "type": "number",
            "format": "double",
            "minLength": 1,
            "example": 5
          },
          "width": {
            "description": "Indicate the width of the package.",
            "type": "number",
            "format": "double",
            "minLength": 1,
            "example": 8.23
          },
          "height": {
            "description": "Indicate the height of the package.",
            "type": "number",
            "format": "double",
            "minLength": 1,
            "example": 9.24
          }
        },
        "required": [
          "length",
          "width",
          "height",
          "units"
        ]
      },
      "rate_item_line": {
        "type": "object",
        "properties": {
          "packageCode": {
            "type": "string",
            "default": "CUSTOM_PACKAGE",
            "description": "The package type, such as `THICK_ENVELOPE`, `SMALL_FLAT_RATE_BOX`, `LARGE_PACKAGE`, etc. The code `CUSTOM_PACKAGE` indicates a custom or unknown package type.",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/other/guide-to-reading.html"
            }
          },
          "weight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Weight"
              }
            ],
            "description": "These are the package weight details."
          },
          "dimensions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Dimensions"
              }
            ],
            "description": "Indicate the dimensions of the package.\n\n - Dimensions are optional but when added, then all three dimensions must be indicated."
          },
          "declaredInfo": {
            "type": "object",
            "description": "This is the Declared Value of any shipment.This is including, but not limited to any loss, damage, delay, misdelivery, any failure to provide information, or misdelivery of information related to the Shipment.",
            "properties": {
              "currency": {
                "type": "string",
                "enum": [
                  "USD",
                  "EUR",
                  "JPY",
                  "GBP"
                ],
                "description": "The currencies that are supported by GIGALOGISTICS."
              },
              "amount": {
                "type": "number",
                "minimum": 0,
                "description": "The monetary amount, in the specified currency."
              }
            }
          }
        },
        "required": [
          "weight"
        ]
      },
      "rate_shipment_request_body": {
        "type": "object",
        "properties": {
          "carrierId": {
            "description": "The carrier account that is billed for the shipping charges.",
            "type": "string",
            "minLength": 1,
            "example": "GLSxxxxxxxxxx"
          },
          "serviceType": {
            "description": "The carrier service used to ship the package, such as `FEDEX_GROUND`, etc. If not filled in, the quotation information of all services will be returned.\n > **Note:** If this value is not passed, the quotation information of all logistics services will be returned.",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/guides/list-carrier-service.html"
            },
            "type": "string"
          },
          "shipperAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/rate_address"
              }
            ],
            "description": "The shipment's origin address. If you frequently ship from the same  , consider creating a warehouse. Then you can simply specify the `warehouseId` rather than the complete address each time.\n\n > **Note:** Please note that the effective address in the warehouse is originAddress."
          },
          "recipientAddress": {
            "description": "Indicate the descriptive data for the recipient location to which the shipment is to be received.",
            "allOf": [
              {
                "$ref": "#/components/schemas/rate_address"
              }
            ]
          },
          "warehouseId": {
            "type": "string",
            "default": null,
            "allOf": [
              {
                "$ref": "#/components/schemas/gg_id"
              }
            ],
            "description": "The [warehouse](https://platform-staging.gigacloudlogistics.com/docs/guide/other/guide-to-reading.html) that the shipment is being shipped from. "
          },
          "rateRequestType": {
            "description": "Indicate the type of rates to be returned.Following are values:\n - LIST - Returns FedEx published list rates in addition to account-specific rates (if applicable).\n - PREFERRED - Returns rates in the preferred currency specified in the element preferredCurrency.\n - ACCOUNT - Returns account specific rates.\n - INCENTIVE - This is one-time discount for incentivising the customer. For more information, contact your FedEx representative.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "LIST",
                "INCENTIVE",
                "ACCOUNT",
                "PREFERRED"
              ]
            },
            "example": [
              "LIST",
              "PREFERRED"
            ]
          },
          "signatureOption": {
            "type": "object",
            "description": "Indicate the Signature Type.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/signature_option_fedex"
              }
            ]
          },
          "itemLines": {
            "type": "array",
            "description": "The packages in the shipment.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/rate_item_line"
                }
              ]
            }
          }
        },
        "required": [
          "carrierId",
          "recipientAddress",
          "rateRequestType",
          "itemLines"
        ]
      },
      "rate_success_resp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The descriptive data of the requested shipment.\n > **Note:** For detailed structure, see `output` under the **Responses 200** tab of the linked document",
            "externalDocs": {
              "description": "Click to view detailed structure",
              "url": "https://developer.fedex.com/api/en-hk/catalog/rate/v1/docs.html"
            },
            "type": "object"
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "429ErrorResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "default": false,
            "example": false
          },
          "errors": {
            "description": "The errors associated with the failed API call",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "source": {
                  "type": "string",
                  "enum": [
                    "CARRIER",
                    "GIGA"
                  ],
                  "description": "The source of the error, as indicated by the name this informs us if the API call failed because of the carrier or the platform itself.",
                  "example": "GIGA"
                },
                "code": {
                  "description": "The error code specified for the failed API Call.[Click here to see more](https://platform-staging.gigacloudlogistics.com/docs/guide/overview/error-codes.html);",
                  "type": "string",
                  "example": "DUPLICATE_REQUEST"
                },
                "message": {
                  "type": "string",
                  "description": "An error message associated with the failed API call",
                  "example": "The transactionId is duplicated in the request."
                }
              },
              "required": [
                "source",
                "code",
                "message"
              ]
            }
          }
        },
        "required": [
          "success",
          "errors"
        ]
      },
      "ltl_contact": {
        "type": "object",
        "description": "The information for the contact person.",
        "properties": {
          "personName": {
            "description": "The name of a contact person at this address.",
            "type": "string",
            "maxLength": 35,
            "example": "1 Collection Point Name (Test 1)"
          },
          "phoneNumber": {
            "description": "The phone number of a contact person at this address. The format of this phone number varies depending on the country.",
            "type": "string",
            "maxLength": 25,
            "example": "1234-123456789"
          },
          "emailAddress": {
            "description": "Specify contact email address. Maximum length is 40.",
            "type": "string",
            "maxLength": 40,
            "example": "TEST@TEST.COM"
          }
        },
        "required": [
          "phoneNumber",
          "personName",
          "emailAddress"
        ]
      },
      "ltl_address": {
        "type": "object",
        "description": "The address of the contact person.",
        "properties": {
          "countryCode": {
            "description": "This is the two-letter country code.",
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "example": "GB",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html"
            }
          },
          "stateOrProvinceCode": {
            "description": "This is a placeholder for state or province code.",
            "type": "string",
            "maxLength": 35,
            "example": "TEST"
          },
          "city": {
            "description": "The name of city, town of the recipient.Max length is 35.",
            "type": "string",
            "maxLength": 35,
            "example": "155 COLLECTION TOWN"
          },
          "zipCode": {
            "description": "This is the postal code.",
            "type": "string",
            "maxLength": 10,
            "example": "SL7 1TB"
          },
          "locationName": {
            "description": "Specify contact company name. Maximum length is 35.",
            "type": "string",
            "maxLength": 35,
            "example": "1 Collection Point Name (Test 1)"
          },
          "streetLine1": {
            "description": "The first line of the street address. For some addresses, this may be the only line. Other addresses may require 2 or 3 lines.",
            "type": "string",
            "maxLength": 35,
            "example": "155 COLLECTION STREET 1"
          },
          "streetLine2": {
            "description": "The second line of the street address. For some addresses, this line may not be needed.",
            "type": "string",
            "maxLength": 35,
            "example": "TEST"
          },
          "streetLine3": {
            "description": "The third line of the street address. For some addresses, this line may not be needed.",
            "type": "string",
            "maxLength": 35,
            "example": "TEST"
          },
          "addressType": {
            "description": "Indicate this address type, Only `RESIDENTIAL` means residential (private).",
            "type": "string",
            "enum": [
              "RESIDENTIAL",
              "BUSINESS",
              "PARCELSHOP"
            ],
            "example": "RESIDENTIAL"
          }
        },
        "required": [
          "countryCode",
          "stateOrProvinceCode",
          "city",
          "zipCode",
          "streetLine1"
        ]
      },
      "ltl_address_info": {
        "type": "object",
        "description": "The address and contact details for the location where freight will be picked up.",
        "properties": {
          "contact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_contact"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_address"
              }
            ]
          },
          "readyTime": {
            "type": "string",
            "description": "When the shipment is ready to be picked up at the Origin (start). The time will be represented in a 24-hour format.  <br/>Example: 09:00"
          },
          "closeTime": {
            "type": "string",
            "description": "The closing window of when the shipment can be picked up at the Origin (end). The time will be represented in a 24-hour format.  <br/>Example: 15:00"
          }
        },
        "required": [
          "address"
        ]
      },
      "ltl_balance": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "enum": [
              "USD"
            ],
            "description": "Declared currency of the contained items. Currently only supports USD.",
            "example": "USD"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Insurable total product value for the items.",
            "example": 10
          }
        },
        "required": [
          "currency",
          "amount"
        ]
      },
      "ltl_payor": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of billing. Valid values include `C`, `S`, or `T`.\n\n - `C` : consignee\n - `S` : shipper\n - `T` : third_party\n\n > **Note:** This item is required when the logistics company is RRTS or ESTES."
          },
          "terms": {
            "type": "string",
            "description": "The payment terms. Valid values include `P`, `C`.\n\n - `P` : prepaid\n - `C` : collect\n\n > **Note:** This item is required when the logistics company is RRTS or ESTES."
          },
          "account": {
            "type": "string",
            "description": "The account number to bill for this pickup."
          },
          "address": {
            "description": "The address of the location.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_address"
              }
            ]
          },
          "contact": {
            "description": "The information for the contact person.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_contact"
              }
            ]
          }
        },
        "required": [
          "type",
          "terms"
        ]
      },
      "dimensions": {
        "type": "object",
        "properties": {
          "units": {
            "description": "The dimension units that are supported by GIGALOGISTICS.",
            "type": "string",
            "example": "IN",
            "enum": [
              "CM",
              "IN",
              "FT"
            ],
            "title": "Unit information"
          },
          "length": {
            "description": "Indicate the length of the package.",
            "type": "number",
            "format": "double",
            "minLength": 1,
            "example": 5
          },
          "width": {
            "description": "Indicate the width of the package.",
            "type": "number",
            "format": "double",
            "minLength": 1,
            "example": 8.23
          },
          "height": {
            "description": "Indicate the height of the package.",
            "type": "number",
            "format": "double",
            "minLength": 1,
            "example": 9.24
          }
        },
        "required": [
          "length",
          "width",
          "height",
          "units"
        ]
      },
      "weight": {
        "type": "object",
        "properties": {
          "value": {
            "description": "The weight, in the specified unit",
            "type": "number",
            "format": "double",
            "example": 12.3
          },
          "units": {
            "description": "The possible weight unit values.",
            "type": "string",
            "enum": [
              "KG",
              "LB"
            ],
            "example": "KG",
            "title": "Unit information"
          }
        },
        "required": [
          "value",
          "units"
        ]
      },
      "ltl_shipmentPiece": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "string",
            "description": "Number of pieces that have the same Weight,Dimensions,and Content."
          },
          "dimensions": {
            "description": "The dimensions of the piece.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dimensions"
              }
            ]
          },
          "weight": {
            "description": "The weight of the piece.",
            "allOf": [
              {
                "$ref": "#/components/schemas/weight"
              }
            ]
          },
          "freightClass": {
            "type": "string",
            "description": "The [NMFC freight class](https://biz.nmfta.org/documents/ccsb/ccsb%20guidelines.pdf) for your freight."
          },
          "nmfcNumber": {
            "type": "string",
            "description": "The [NMFC commodity code](https://nmfta.org/) / item number."
          }
        },
        "required": [
          "quantity",
          "dimensions",
          "weight"
        ]
      },
      "ltl_shipmentItem": {
        "type": "object",
        "properties": {
          "packageType": {
            "type": "string",
            "enum": [
              "PALLET",
              "BOX",
              "CARTON"
            ],
            "description": "The code for this package type."
          },
          "description": {
            "type": "string",
            "description": "Name to represent what the box contains."
          },
          "sku": {
            "type": "string",
            "description": "Put your product SKU if you are shipping a given product.If the SKU has multiple boxes append a unique identifier to them like:-2,-3,-4"
          },
          "freightClass": {
            "type": "string",
            "description": "The [NMFC freight class](https://biz.nmfta.org/documents/ccsb/ccsb%20guidelines.pdf) for your freight."
          },
          "nmfcNumber": {
            "type": "string",
            "description": "The [NMFC commodity code](https://nmfta.org/) / item number."
          },
          "linearFeet": {
            "type": "number",
            "format": "double",
            "description": "The linear feet of the shipping item.\n\n > **Note:** It is required when the truck company is `RL` or `ESTES` and uses `OD` special service."
          },
          "quantity": {
            "type": "number",
            "description": "Number of items that have the same Weight,Dimensions,and Content."
          },
          "stackable": {
            "type": "boolean",
            "default": false,
            "description": "This indicates whether or not this item can be safely stacked."
          },
          "declaredInfo": {
            "description": "The declared value of the contained goods.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_balance"
              }
            ]
          },
          "dimensions": {
            "description": "The dimensions of the item.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dimensions"
              }
            ]
          },
          "weight": {
            "description": "The weight of the item.",
            "allOf": [
              {
                "$ref": "#/components/schemas/weight"
              }
            ]
          },
          "pieces": {
            "description": "The list of pieces contained in this item.",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ltl_shipmentPiece"
                }
              ]
            }
          },
          "shipmentNew": {
            "type": "boolean",
            "description": "This indicates whether the goods are new or not.",
            "default": true
          },
          "hazmat": {
            "type": "boolean",
            "default": false,
            "description": "Indicates whether the item contains hazardous material or not."
          },
          "hazmatClass": {
            "type": "string",
            "description": "Class of the hazardous material.[Click here to see more.](https://platform-staging.gigacloudlogistics.com/docs)"
          }
        },
        "required": [
          "packageType",
          "description",
          "freightClass",
          "quantity",
          "dimensions",
          "weight"
        ]
      },
      "accessorials": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "RES",
            "description": "The code for the accessorial service offered. [Click here to see more](https://platform-staging.gigacloudlogistics.com/docs/guide/ltl-ship/accessorial-services.html)."
          },
          "attributes": {
            "type": "array",
            "description": "Some carriers require additional supplemental information about an accessorial service like name or phone. These requirements are outlined here.",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "request_spot_quote": {
        "type": "object",
        "properties": {
          "carrierId": {
            "type": "string",
            "description": "The carrier account that is billed for the shipping charges."
          },
          "pickupDate": {
            "type": "string",
            "description": "Ready for pick up date (YYYY-MM-DD). <br/> Example: 2022-09-22"
          },
          "shipper": {
            "description": "Origin information.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_address_info"
              }
            ]
          },
          "recipient": {
            "description": "Destination information.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_address_info"
              }
            ]
          },
          "totalDeclaredValue": {
            "description": "The total declared shipment value of the freight.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_balance"
              }
            ]
          },
          "payor": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_payor"
              }
            ]
          },
          "itemList": {
            "description": "Array of item to be included in a shipment.",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ltl_shipmentItem"
                }
              ]
            }
          },
          "accessorials": {
            "type": "array",
            "description": "The accessorial services.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/accessorials"
                }
              ]
            }
          }
        },
        "required": [
          "carrierId",
          "pickupDate",
          "shipper",
          "recipient"
        ]
      },
      "ltl_service_center_info": {
        "type": "object",
        "description": "The address and contact details for the location where freight will be picked up.",
        "properties": {
          "code": {
            "type": "string",
            "description": "Origin service center code."
          },
          "location": {
            "type": "string",
            "description": "Origin service center City, State."
          },
          "zipCode": {
            "type": "string",
            "description": "Origin service center zip code."
          },
          "phone": {
            "type": "string",
            "description": "Origin service center phone number."
          },
          "address1": {
            "type": "string",
            "description": "Origin service center address line 1"
          },
          "address2": {
            "type": "string",
            "description": "Origin service center address line 2"
          },
          "city": {
            "type": "string",
            "description": "Origin service center city."
          },
          "state": {
            "type": "string",
            "description": "Origin service center state."
          }
        }
      },
      "charge": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "object",
            "description": "This object represents the monetary amount of the associated charge.",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Currency information. Currently only supports USD."
              },
              "value": {
                "type": "number",
                "description": "The monetary amount."
              }
            }
          },
          "desc": {
            "description": "This is a description of the item that is provided by the carrier.",
            "type": "string"
          },
          "type": {
            "description": "This represents the type of the charge and will return `TOTAL`, `DISCOUNT`, `ACCESSORIAL`, `CONTAINER`, or `UNCATEGORIZED`, etc.",
            "type": "string"
          },
          "rate": {
            "description": "Charge rate.",
            "type": "string"
          },
          "weight": {
            "description": "Weight of the item.",
            "type": "object",
            "properties": {
              "value": {
                "description": "The weight, in the specified unit",
                "type": "number",
                "format": "double",
                "example": 12.3
              },
              "units": {
                "description": "The possible weight unit values.",
                "type": "string",
                "enum": [
                  "KG",
                  "LB"
                ],
                "example": "KG",
                "title": "Unit information"
              }
            }
          }
        }
      },
      "quote": {
        "type": "object",
        "properties": {
          "quoteId": {
            "type": "string",
            "description": "This quoteId is generated and attached to this quote. This ID can be used to schedule a pickup based on this quote."
          },
          "quoteType": {
            "type": "string",
            "description": "When generating a spot-quote, `spot` is the string returned. For contract quotes, `contract` is the string returned."
          },
          "serviceLevel": {
            "type": "string",
            "description": "service level code. Valid values include `STD`, `GSDS`, or `NAN`, etc.\n\n > - STD : Standard Service \n > - GSDS : Guaranteed Service"
          },
          "shipper": {
            "description": "Origin information.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_address_info"
              }
            ]
          },
          "recipient": {
            "description": "Destination information.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_address_info"
              }
            ]
          },
          "originServiceCenter": {
            "description": "Rate quote origin service center",
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_service_center_info"
              }
            ]
          },
          "destinationServiceCenter": {
            "description": "Rate quote destination service center",
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_service_center_info"
              }
            ]
          },
          "charges": {
            "type": "array",
            "description": "An array of objects containing an itemized breakdown of the charges for the quote.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "carrierSCAC": {
            "type": "string"
          },
          "estimateDeliveryDays": {
            "type": "number",
            "description": "This number represents the estimated number of days between pickup and delivery if provided by the carrier."
          },
          "pickupDate": {
            "type": "string",
            "description": "Ready for pick up date (YYYY-MM-DD). <br/> Example: 2022-09-22"
          },
          "deliveryDate": {
            "type": "string",
            "description": "delivery date (YYYY-MM-DD). <br/> Example: 2022-09-22"
          },
          "deliveryTime": {
            "type": "string",
            "description": "delivery Time (HH-mm-ss). <br/> Example: 17:00:00. Minimum time limit for time-guaranteed service."
          },
          "carrierMessage": {
            "type": "string",
            "description": "This optional field contains contains a message about the quote if provided by the carrier."
          },
          "netCharge": {
            "description": "Rate quote net charge for this service level.",
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "Currency information. Currently only supports USD."
              },
              "value": {
                "type": "number",
                "description": "The monetary amount."
              }
            },
            "required": [
              "currency",
              "value"
            ]
          },
          "remark": {
            "type": "string",
            "description": "Quote remark information."
          }
        },
        "required": [
          "quoteId",
          "serviceLevel",
          "shipper",
          "recipient",
          "charges",
          "pickupDate",
          "netCharge"
        ]
      },
      "success_response_spot_quote": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The descriptive data of the requested shipment.",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/quote"
                }
              ]
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ltl_shipment_contact": {
        "type": "object",
        "description": "The information for the contact person.",
        "properties": {
          "personName": {
            "description": "The name of a contact person at this address.",
            "type": "string",
            "example": "1 Collection Point Name (Test 1)"
          },
          "phoneNumber": {
            "description": "The phone number of a contact person at this address. PhoneNumber consist of 10 digits,with a 3-digit area.",
            "type": "string",
            "example": 6269128886
          },
          "phoneExtension": {
            "description": "Specify contact phone extension.",
            "type": "string"
          },
          "companyName": {
            "description": "Specify contact company name.",
            "type": "string",
            "example": "Gigacloud AT1"
          },
          "emailAddress": {
            "description": "Specify contact email address.",
            "type": "string",
            "example": "TEST@TEST.COM"
          }
        },
        "required": [
          "phoneNumber",
          "personName"
        ]
      },
      "ltl_shipment_address": {
        "type": "object",
        "description": "The address of the contact person.",
        "properties": {
          "countryCode": {
            "description": "This is the two-letter country code.",
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "example": "US",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html"
            }
          },
          "stateOrProvinceCode": {
            "description": "This is a placeholder for state or province code.",
            "type": "string",
            "example": "GA"
          },
          "city": {
            "description": "The name of city, town of the recipient.",
            "type": "string",
            "example": "LITHIA SPRINGS"
          },
          "zipCode": {
            "description": "This is the postal code.",
            "type": "string",
            "example": 30122
          },
          "streetLine1": {
            "description": "The first line of the street address. For some addresses, this may be the only line. Other addresses may require 2 or 3 lines.",
            "type": "string",
            "example": "850 Douglas Hills Rd, Suit 100"
          },
          "streetLine2": {
            "description": "The second line of the street address. For some addresses, this line may not be needed.",
            "type": "string",
            "example": "TEST"
          },
          "streetLine3": {
            "description": "The third line of the street address. For some addresses, this line may not be needed.",
            "type": "string",
            "example": "TEST"
          },
          "addressType": {
            "description": "Indicate this address type, Only `RESIDENTIAL` means residential (private).",
            "type": "string",
            "enum": [
              "RESIDENTIAL",
              "BUSINESS",
              "PARCELSHOP"
            ],
            "example": "RESIDENTIAL"
          }
        },
        "required": [
          "countryCode",
          "stateOrProvinceCode",
          "city",
          "zipCode",
          "streetLine1"
        ]
      },
      "ltl_shipment_itemLine": {
        "type": "object",
        "properties": {
          "packageType": {
            "type": "string",
            "example": "BOX",
            "enum": [
              "PALLET",
              "BOX"
            ],
            "description": "The code for this package type."
          },
          "description": {
            "type": "string",
            "example": "description",
            "description": "The description of the item(s) in this container."
          },
          "sku": {
            "type": "string",
            "example": "WH123456",
            "description": "Put your product SKU if you are shipping a given product.If the SKU has multiple boxes append a unique identifier to them like:-2,-3,-4"
          },
          "freightClass": {
            "type": "string",
            "example": "65",
            "description": "The NMFC freight class for your freight."
          },
          "nmfcNumber": {
            "type": "string",
            "description": "The [NMFC commodity code](https://nmfta.org/) / item number."
          },
          "dimensions": {
            "description": "The dimensions of the container.",
            "allOf": [
              {
                "$ref": "#/components/schemas/dimensions"
              }
            ]
          },
          "weight": {
            "description": "The weight of the container.",
            "allOf": [
              {
                "$ref": "#/components/schemas/weight"
              }
            ]
          },
          "quantity": {
            "type": "number",
            "example": 1,
            "description": "Number of individual pieces for the line item being described."
          },
          "declaredInfo": {
            "description": "The declared value of the contained goods.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_balance"
              }
            ]
          }
        },
        "required": [
          "description",
          "quantity",
          "weight",
          "packageType",
          "freightClass"
        ]
      },
      "ltl_shipment_item": {
        "type": "object",
        "properties": {
          "packageType": {
            "type": "string",
            "example": "BOX",
            "enum": [
              "PALLET",
              "BOX"
            ],
            "description": "The code for this package type."
          },
          "description": {
            "type": "string",
            "example": "BT2345*2",
            "description": "The description of the item(s) in this container."
          },
          "sku": {
            "type": "string",
            "example": "WH123456",
            "description": "Put your product SKU if you are shipping a given product."
          },
          "freightClass": {
            "type": "string",
            "example": "65",
            "description": "The [NMFC freight class](https://biz.nmfta.org/documents/ccsb/ccsb%20guidelines.pdf) for your freight."
          },
          "nmfcNumber": {
            "type": "string",
            "description": "The [NMFC commodity code](https://nmfta.org/) / item number."
          },
          "quantity": {
            "type": "number",
            "example": 1,
            "description": "The number of packages of this type."
          },
          "stackable": {
            "type": "boolean",
            "default": false,
            "example": false,
            "description": "Indicates whether or not this package can be safely stacked."
          },
          "declaredInfo": {
            "description": "The declared value of the contained goods.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_balance"
              }
            ]
          },
          "dimensions": {
            "description": "The dimensions of the handling unit.The maximum of dimension is (240L x 96W x 102H)",
            "allOf": [
              {
                "$ref": "#/components/schemas/dimensions"
              }
            ]
          },
          "weight": {
            "description": "The weight of the handling unit.",
            "allOf": [
              {
                "$ref": "#/components/schemas/weight"
              }
            ]
          },
          "pieces": {
            "type": "array",
            "description": "The list of pieces contained in this handling unit.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ltl_shipment_itemLine"
                }
              ]
            }
          },
          "hazmat": {
            "type": "boolean",
            "default": false,
            "description": "Indicates whether the handling unit contains hazardous material or not."
          },
          "hazmatClass": {
            "type": "string",
            "description": "Class of the hazardous material.[Click here to see more.](https://platform-staging.gigacloudlogistics.com/docs)"
          }
        },
        "required": [
          "packageType",
          "quantity",
          "pieces",
          "weight"
        ]
      },
      "reference_number": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "quoteID",
            "description": "Indicates the name of the reference number being provided.\n\n Valid values:\n\n `pro`: Shipper's pre-assigned PRO number for carrier.If not provided, one will be auto assigned by carrier.\n\n `quoteID`: Carrier Rate Quote ID.\n\n `shipmentId`: Shipment Id (SID) number for the shipment.\n\n `masterBol`: Master Bill of Lading number for the shipment.\n\n `bol`: Bill of Lading number(s) for the shipment.\n\n `po`: Purchase Number. "
          },
          "value": {
            "type": "string",
            "example": "98357607",
            "description": "Additional reference number that correlates to the additional reference name."
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "ltl_shipment_request": {
        "type": "object",
        "properties": {
          "carrierId": {
            "type": "string",
            "description": "The carrier account that is billed for the shipping charges.",
            "example": "GCL-xxxxxxxxxxx"
          },
          "pickupDate": {
            "type": "string",
            "example": "2024-05-10",
            "description": "Ready for pick up date (YYYY-MM-DD). <br/> Example: 2024-05-10"
          },
          "deliveryDate": {
            "type": "string",
            "example": "2024-05-10",
            "description": "Ready for delivery up date (YYYY-MM-DD). <br/> Example: 2022-05-10"
          },
          "serviceType": {
            "type": "string",
            "description": "The carrier service used to ship the package. <br/> Example: `ESTES_STANDAR`",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/guides/list-carrier-service.html"
            },
            "example": "ESTES_STANDAR"
          },
          "shipper": {
            "type": "object",
            "description": "The address and contact details for the location where freight will be picked up.",
            "properties": {
              "contact": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ltl_shipment_contact"
                  }
                ],
                "description": "Indicate the contact details for this shipment. The requirements for mandatory fields and field length limitations may vary across different carriers.",
                "externalDocs": {
                  "description": "Find more info here",
                  "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/ltl-ship/validation/bol/shipper-contact.html"
                }
              },
              "address": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ltl_shipment_address"
                  }
                ],
                "description": "This is detailed information on physical location. The requirements for mandatory fields and field length limitations may vary across different carriers.",
                "externalDocs": {
                  "description": "Find more info here",
                  "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/ltl-ship/validation/bol/shipper-address.html"
                }
              },
              "readyTime": {
                "type": "string",
                "description": "When the shipment is ready to be picked up at the Origin (start). The time will be represented in a 24-hour format.  <br/>Example: 09:00\n\n > **Note:** readyTime is required when the carrier is ESTES.",
                "example": "09:00"
              },
              "closeTime": {
                "type": "string",
                "description": "The closing window of when the shipment can be picked up at the Origin (end). The time will be represented in a 24-hour format. <br/>Example: 17:00",
                "example": "17:00"
              }
            },
            "required": [
              "contact",
              "address"
            ]
          },
          "recipient": {
            "type": "object",
            "description": "The address and contact details for the location where the freight will be sent.",
            "properties": {
              "contact": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ltl_shipment_contact"
                  }
                ],
                "description": "Indicate the contact details for this shipment. The requirements for mandatory fields and field length limitations may vary across different carriers.",
                "externalDocs": {
                  "description": "Find more info here",
                  "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/ltl-ship/validation/bol/recipient-contact.html"
                }
              },
              "address": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ltl_shipment_address"
                  }
                ],
                "description": "This is detailed information on physical location. The requirements for mandatory fields and field length limitations may vary across different carriers.",
                "externalDocs": {
                  "description": "Find more info here",
                  "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/ltl-ship/validation/bol/recipient-address.html"
                }
              },
              "readyTime": {
                "type": "string",
                "example": "09:00",
                "description": "When the Destination is ready to begin receiving the shipment.The time will be represented in a 24-hour format.  <br/>Example: 09:00"
              },
              "closeTime": {
                "type": "string",
                "example": "17:00",
                "description": "The closing window of when the Destination can receive the shipment. The time will be represented in a 24-hour format. <br/>Example: 17:00"
              }
            },
            "required": [
              "contact",
              "address"
            ]
          },
          "payor": {
            "type": "object",
            "description": "Specifies the payment details specifying the method and means of payment to carrier for providing shipping services. The difference between each carrier is as follows.\n\n > - **ESTES** : Required",
            "properties": {
              "type": {
                "type": "string",
                "example": "S",
                "description": "The type of billing. Valid values include `C`, `S`, or `T`.\n\n - `C` : consignee\n - `S` : shipper\n - `T` : third_party\n\n"
              },
              "terms": {
                "type": "string",
                "example": "P",
                "description": "The payment terms. Valid values include `P`, `C`, or `T`.\n\n - `P` : prepaid\n - `C` : collect\n\n - `T` : third_party\n\n"
              },
              "account": {
                "type": "string",
                "example": "123456",
                "description": "The account number to bill for this pickup."
              },
              "address": {
                "description": "Payer's address information. The requirements for mandatory fields and field length limitations may vary across different carriers.",
                "externalDocs": {
                  "description": "Find more info here",
                  "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/ltl-ship/validation/bol/payor-address.html"
                },
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ltl_shipment_address"
                  }
                ]
              },
              "contact": {
                "description": "Payer's contact information. The requirements for mandatory fields and field length limitations may vary across different carriers.",
                "externalDocs": {
                  "description": "Find more info here",
                  "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/ltl-ship/validation/bol/recipient-contact.html"
                },
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ltl_shipment_contact"
                  }
                ]
              }
            },
            "required": [
              "type",
              "terms"
            ]
          },
          "handlingUnits": {
            "description": "Array of handling units to be included on a shipment.For example,pallets,boxes.The requirements for mandatory fields and field length limitations may vary across different carriers.",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/ltl-ship/validation/bol/handlingUnits.html"
            },
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ltl_shipment_item"
                }
              ]
            }
          },
          "documentOptions": {
            "description": "Options for bol and label.",
            "type": "object",
            "properties": {
              "bol": {
                "type": "object",
                "description": "Options for bol",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "default": false,
                    "example": true,
                    "description": "Indicates whether or not you want the image of the Bill Of Lading PDF returned in the response."
                  },
                  "imageType": {
                    "type": "string",
                    "default": "PDF",
                    "example": "PDF",
                    "description": "Specify the image format used for a shipping document.",
                    "enum": [
                      "PDF"
                    ]
                  }
                }
              },
              "shippingLabel": {
                "type": "object",
                "description": "Options for shipping label",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether or not you want the image of the shipping labels PDF returned in the response.",
                    "default": false,
                    "example": true
                  },
                  "imageType": {
                    "type": "string",
                    "default": "PDF",
                    "description": "Specify the image format used for a shipping document.",
                    "example": "PDF",
                    "enum": [
                      "PDF"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "example": "Zebra",
                    "description": "Specifies the printer format type for the labels.\n\n Required when documentOptions.shippingLabel.enabled is true.\n\n - `Avery`: 3-1/3 x 4 (6 labels per sheet)\n\n - `Letter`: Standard letter sheet\n\n - `Zebra`: 4 x 6 (1 label per sheet)",
                    "enum": [
                      "Avery",
                      "Letter",
                      "Zebra"
                    ]
                  },
                  "quantity": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 100,
                    "example": 1,
                    "description": "Specifies the quantity of labels desired.\n\n Required when documentOptions.shippingLabel.enabled is true."
                  },
                  "position": {
                    "type": "number",
                    "example": 1,
                    "description": "Conditionally Required.\n\n Specifies the starting position for the shipping labels.\n\n Required when documentOptions.shippingLabel is `Avery`.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  }
                }
              }
            }
          },
          "notifications": {
            "type": "array",
            "description": "Include if you want notifications of shipment movements by email",
            "items": {
              "type": "string",
              "example": "test@test.com"
            }
          },
          "accessorials": {
            "type": "array",
            "description": "The accessorial services.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/accessorials"
                }
              ]
            }
          },
          "referenceNumbers": {
            "type": "array",
            "description": "List of reference numbers.The requirements for mandatory fields and field length limitations may vary across different carriers.",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/ltl-ship/validation/bol/referenceNumbers.html"
            },
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/reference_number"
                }
              ]
            }
          },
          "specialInstructions": {
            "type": "array",
            "description": "List any special instructions you wish to pass to the carrier.",
            "items": {
              "type": "string",
              "example": "Take care of parcels"
            }
          }
        },
        "required": [
          "carrierId",
          "serviceType",
          "pickupDate",
          "serviceCode",
          "recipient",
          "shipper",
          "handlingUnits"
        ]
      },
      "ltl_shipment_success_async": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "A unique identifier for subsequent asynchronously fetched results.",
            "type": "string"
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ltl_shipment_response": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "The transaction id you specified."
          },
          "carrierId": {
            "type": "string",
            "description": "The carrier account that is billed for the shipping charges."
          },
          "carrierCode": {
            "type": "string",
            "description": "Return the code of a Carrier operating company",
            "enum": [
              "ESTES",
              "CEVA"
            ]
          },
          "serviceType": {
            "type": "string",
            "description": "The carrier service used to ship the package"
          },
          "gigaTrackingNumber": {
            "type": "string",
            "description": "The GIGA tracking number for the shipment. A string that uniquely identifies the shipment"
          },
          "trackingNumber": {
            "type": "string",
            "description": "The tracking number for the shipment. The format depends on the carrier."
          },
          "documents": {
            "type": "array",
            "description": "An array of document objects.",
            "items": {
              "type": "object",
              "properties": {
                "contentType": {
                  "type": "string",
                  "description": "Indicates the type of document.",
                  "enum": [
                    "bol",
                    "label"
                  ]
                },
                "fileUrl": {
                  "type": "string",
                  "description": "The URL of the document.\n\n > **Note:** When fileUrl is null, fileBase64 must have a value, otherwise, when fileUrl is not empty, fileBase64 is null"
                },
                "fileBase64": {
                  "type": "string",
                  "description": "The base64-encoded document."
                }
              }
            }
          }
        },
        "required": [
          "transactionId",
          "carrierId",
          "carrierCode",
          "serviceType",
          "gigaTrackingNumber",
          "trackingNumber"
        ]
      },
      "ltl_success_response": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The descriptive data of the requested shipment.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ltl_shipment_response"
              }
            ]
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ltl_shipment_async_result_response": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "A unique identifier for subsequent asynchronously fetched results.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "response": {
                  "description": "Response body for asynchronous requests.",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ltl_success_response"
                    }
                  ]
                },
                "httpCode": {
                  "type": "string",
                  "description": "Http status code"
                },
                "requestId": {
                  "type": "string",
                  "description": "The unique identifier generated by the `Create Shipments Async` interface."
                }
              }
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ltl_pickup_request": {
        "type": "object",
        "description": "Complete details to create a new pickup request.",
        "properties": {
          "carrierId": {
            "type": "string",
            "description": "The carrier account that is billed for the shipping charges."
          },
          "requestAction": {
            "type": "string",
            "default": "LL",
            "description": "This is the pickup action to perform. If the request is for Estes to pick up a full trailer, choose HE (to indicate empty) or HL (to indicate loaded). If you need Estes to drop off an empty trailer, choose SE. If the request is for a pickup of freight from your dock that is not a trailer-load, then pass LL (or don’t pass this element, and it will default to LL). If Estes must call to set up an appointment before arriving, then pass AP. Valid values are listed below:\n\n `AP`:Appointment required \n\n `HE`:LTL hook empty \n\n `HL`:LTL hook loaded \n\n `LL`:LTL live load \n\n `SE`:LTL spot/drop empty",
            "enum": [
              "AP",
              "HE",
              "HL",
              "LL",
              "SE"
            ]
          },
          "paymentTerms": {
            "type": "string",
            "description": "The payment terms. Valid values include `P`, `C`.\n\n - `P` : prepaid\n - `C` : collect",
            "enum": [
              "P",
              "C"
            ]
          },
          "pickupDate": {
            "type": "string",
            "description": "Ready for pick up date (YYYY-MM-DD). <br/> Example: 2024-05-10"
          },
          "pickupStartTime": {
            "type": "string",
            "description": "When the shipment is ready to be picked up at the Origin (start). The time will be represented in a 24-hour format.  <br/>Example: 09:00"
          },
          "pickupEndTime": {
            "type": "string",
            "description": "The closing window of when the shipment can be picked up at the Origin (end). The time will be represented in a 24-hour format. <br/>Example: 17:00"
          },
          "shipper": {
            "type": "object",
            "description": "The address and contact details for the location where freight will be picked up.",
            "properties": {
              "address": {
                "type": "object",
                "description": "The address of the contact person.",
                "properties": {
                  "countryCode": {
                    "description": "This is the two-letter country code.<br/> Example: US",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2,
                    "example": "US",
                    "externalDocs": {
                      "description": "Find more info here",
                      "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html"
                    }
                  },
                  "stateOrProvinceCode": {
                    "description": "This is a placeholder for state or province code.",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "GA"
                  },
                  "city": {
                    "description": "The name of city, town of the recipient.Max length is 35.",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1,
                    "example": "LITHIA SPRINGS"
                  },
                  "zipCode": {
                    "description": "This is the postal code.",
                    "type": "string",
                    "maxLength": 5,
                    "minLength": 5,
                    "example": 30122
                  },
                  "streetLine1": {
                    "description": "The first line of the street address. For some addresses, this may be the only line. Other addresses may require 2 or 3 lines.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "example": "155 COLLECTION STREET 1"
                  },
                  "streetLine2": {
                    "description": "The second line of the street address. For some addresses, this line may not be needed.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "example": "TEST"
                  },
                  "streetLine3": {
                    "description": "The third line of the street address. For some addresses, this line may not be needed.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "example": "TEST"
                  }
                },
                "required": [
                  "countryCode",
                  "stateOrProvinceCode",
                  "city",
                  "zipCode",
                  "streetLine1"
                ]
              },
              "contact": {
                "type": "object",
                "description": "The information for the contact person.",
                "properties": {
                  "companyName": {
                    "description": "Specify contact company name.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                  },
                  "personName": {
                    "description": "The name of a contact person at this address.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 30,
                    "example": "MICHAEL MAO"
                  },
                  "phoneNumber": {
                    "description": "The phone number of a contact person at this address. PhoneNumber consist of 10 digits,with a 3-digit area.",
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 10,
                    "example": 6269128886
                  },
                  "emailAddress": {
                    "description": "Specify contact email address.Required when receiveNotifications is true.",
                    "type": "string",
                    "example": "TEST@TEST.COM"
                  },
                  "receiveNotifications": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to receive notifications by email."
                  }
                },
                "required": [
                  "personName",
                  "companyName"
                ]
              }
            },
            "required": [
              "address",
              "contact"
            ]
          },
          "totalPieces": {
            "type": "number",
            "description": "Total number of pieces"
          },
          "totalWeight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/weight"
              }
            ]
          },
          "totalHandlingUnits": {
            "type": "number",
            "description": "Total numbers of handling unit"
          },
          "trailer": {
            "type": "array",
            "description": "Booked trailer information",
            "items": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "string",
                  "description": "Trailer length specification in feet.",
                  "enum": [
                    "20",
                    "28",
                    "40",
                    "45",
                    "48",
                    "53"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "Types of trailers.\n\n `CT`: Straight Container\n\n `LG`: Lift Gate\n\n `RD`: Roll Door\n\n `SD`: Side Door\n\n `ST`: Swing Door Truck",
                  "enum": [
                    "CT",
                    "LG",
                    "RD",
                    "SD",
                    "ST"
                  ]
                }
              },
              "required": [
                "length",
                "type"
              ]
            }
          },
          "referenceNumbers": {
            "type": "array",
            "description": "List of reference numbers",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "BOL",
                  "description": "Type of the reference number\n\n Valid values:\n\n `AID`: Appointment ID\n\n `ARN`: Amazon Reference Number\n\n `AUT`: Authorization Number\n\n `BOL`: Shipper Bill of Lading Number\n\n `DOC`: Dock Door Number\n\n `DPT`: Consignee Department Number\n\n `EXL`: Estes Unique ID EUID# or CUID#\n\n `HO` : Homeowner Name\n\n `LDN`: Load Number ID\n\n `NUM`: Shipper Reference Numbers\n\n `PKG`: Sipper Package ID\n\n `PON`: Purchase Order Number\n\n `PRO`: Estes PRO#\n\n `PU#`: Pickup Number from the Customer\n\n `RAU`: Shipper Return Authorization\n\n `SID`: Ship ID#\n\n `SNO`: Shipper Numbers "
                },
                "value": {
                  "type": "string",
                  "example": "98357607",
                  "description": "Value of the reference number"
                }
              },
              "required": [
                "type",
                "value"
              ]
            }
          },
          "handlingUnits": {
            "type": "array",
            "description": "Array of handling units.",
            "items": {
              "type": "object",
              "properties": {
                "packageCode": {
                  "type": "string",
                  "description": "The code for this package type. \n\n `BD`:Bundles\n\n `BG`:Bags\n\n `BK`:Buckets\n\n `BL`:Bales\n\n `BR`:Barrels\n\n `BX`:Boxes\n\n `CN`:Cans\n\n `CR`:Crates\n\n `CS`:Cases\n\n `CT`:Cartons\n\n `CY`:Cylinders\n\n `DR`:Drums\n\n `JC`:Jerrican\n\n `KT`:Kits\n\n `PC`:Pieces\n\n `PK`:Packages\n\n `PL`:Pails\n\n `PT`:Pallets\n\n `RE`:Reels\n\n `RL`:Rolls\n\n `SK`:Skids\n\n `TL`:Truckload\n\n `TO`:Totes\n\n ",
                  "enum": [
                    "BD",
                    "BG",
                    "BK",
                    "BL",
                    "BR",
                    "BX",
                    "CN",
                    "CR",
                    "CS",
                    "CT",
                    "CY",
                    "DR",
                    "JC",
                    "KT",
                    "PC",
                    "PK",
                    "PL",
                    "PT",
                    "RE",
                    "RL",
                    "SK",
                    "TL",
                    "TO"
                  ]
                },
                "description": {
                  "type": "string",
                  "description": "Description of goods",
                  "minLength": 1,
                  "maxLength": 35
                },
                "pieces": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 999999,
                  "description": "The number of pieces of transport handling equipment (pallets, boxes, cases, etc.) in this consignment."
                },
                "weight": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/weight"
                    }
                  ]
                },
                "nmfcNumber": {
                  "type": "string",
                  "description": "nmfcNumber"
                }
              },
              "required": [
                "packageCode",
                "description",
                "pieces",
                "weight"
              ]
            }
          }
        },
        "required": [
          "carrierId",
          "shipper",
          "pickupDate",
          "pickupStartTime",
          "pickupEndTime",
          "totalWeight",
          "totalHandlingUnits"
        ]
      },
      "ltl_pickup_response": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The descriptive data of the requested shipment.",
            "type": "object",
            "properties": {
              "requestNumber": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "shipperContact": {
        "type": "object",
        "properties": {
          "personName": {
            "description": "The name of a contact person at this address. ",
            "type": "string",
            "example": "1 Collection Point Name (Test 1)"
          },
          "phoneNumber": {
            "description": "The phone number of a contact person at this address. The format of this phone number varies depending on the country.",
            "type": "string",
            "example": "1234-123456789"
          },
          "phoneExtension": {
            "description": "Specify contact phone extension.",
            "type": "string",
            "example": 1234
          },
          "companyName": {
            "description": "Specify contact company name. ",
            "type": "string",
            "example": "1 Collection Point Name (Test 1)"
          },
          "emailAddress": {
            "description": "Specify contact email address.",
            "type": "string",
            "example": "TEST@TEST.COM"
          }
        }
      },
      "shipperAddress": {
        "type": "object",
        "properties": {
          "countryCode": {
            "description": "This is the two-letter country code.",
            "type": "string",
            "example": "GB",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html"
            }
          },
          "stateOrProvinceCode": {
            "description": "This is a placeholder for state or province code.",
            "type": "string",
            "example": "TEST"
          },
          "city": {
            "description": "The name of city, town of the shipper. ",
            "type": "string",
            "example": "155 COLLECTION TOWN"
          },
          "zipCode": {
            "description": "This is the postal code. Validity check exists. ",
            "type": "string",
            "example": "SL7 1TB"
          },
          "streetLine1": {
            "description": "This is the combination of number, street name, etc.",
            "type": "string",
            "example": "155 COLLECTION STREET 1"
          },
          "streetLine2": {
            "description": "This is the combination of number, street name, etc. ",
            "type": "string",
            "example": "TEST2"
          },
          "streetLine3": {
            "description": "This is the combination of number, street name, etc. ",
            "type": "string",
            "example": "TEST3"
          },
          "instructions": {
            "description": "This is the address remarks, such as fill in house number.",
            "type": "string",
            "example": "Haseneggstrasse 29"
          },
          "addressType": {
            "description": "Indicate this address type, Only `RESIDENTIAL` means residential (private).",
            "type": "string",
            "enum": [
              "RESIDENTIAL",
              "BUSINESS",
              "PARCELSHOP"
            ],
            "example": "RESIDENTIAL"
          }
        }
      },
      "shipper": {
        "type": "object",
        "properties": {
          "contact": {
            "description": "Indicate the contact details for this shipment. The requirements for mandatory fields and field length limitations may vary across different carriers.",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping/shipper/shipper-contact.html"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/shipperContact"
              }
            ]
          },
          "address": {
            "description": "This is detailed information on physical location. The requirements for mandatory fields and field length limitations may vary across different carriers.",
            "allOf": [
              {
                "$ref": "#/components/schemas/shipperAddress"
              }
            ],
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping/shipper/shipper-address.html"
            }
          }
        },
        "required": [
          "contact",
          "address"
        ]
      },
      "recipientContact": {
        "type": "object",
        "properties": {
          "personName": {
            "description": "The name of a contact person at this address. ",
            "type": "string",
            "example": "1 Collection Point Name (Test 1)"
          },
          "phoneNumber": {
            "description": "The phone number of a contact person at this address. The format of this phone number varies depending on the country.",
            "type": "string",
            "example": "1234-123456789"
          },
          "phoneExtension": {
            "description": "Specify contact phone extension.",
            "type": "string",
            "example": 1234
          },
          "companyName": {
            "description": "Specify contact company name. ",
            "type": "string",
            "example": "1 Collection Point Name (Test 1)"
          },
          "emailAddress": {
            "description": "Specify contact email address.",
            "type": "string",
            "example": "TEST@TEST.COM"
          }
        }
      },
      "recipientAddress": {
        "type": "object",
        "properties": {
          "countryCode": {
            "description": "This is the two-letter country code.",
            "type": "string",
            "example": "GB",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html"
            }
          },
          "stateOrProvinceCode": {
            "description": "This is a placeholder for state or province code. Required when used for US.",
            "type": "string",
            "example": "TEST"
          },
          "city": {
            "description": "The name of city, town of the recipient.",
            "type": "string",
            "example": "155 COLLECTION TOWN"
          },
          "zipCode": {
            "description": "This is the postal code. Validity check exists. ",
            "type": "string",
            "example": "SL7 1TB"
          },
          "streetLine1": {
            "description": "This is the combination of number, street name, etc. ",
            "type": "string",
            "example": "155 COLLECTION STREET 1"
          },
          "streetLine2": {
            "description": "This is the combination of number, street name, etc. ",
            "type": "string",
            "example": "TEST"
          },
          "streetLine3": {
            "description": "This is the combination of number, street name, etc. ",
            "type": "string",
            "example": "TEST3"
          },
          "instructions": {
            "description": "This is the address remarks, such as fill in house number.",
            "type": "string",
            "example": "Haseneggstrasse 29"
          },
          "addressType": {
            "description": "Indicate this address type, Only `RESIDENTIAL` means residential (private).",
            "type": "string",
            "enum": [
              "RESIDENTIAL",
              "BUSINESS",
              "PARCELSHOP"
            ],
            "example": "RESIDENTIAL"
          }
        }
      },
      "recipient": {
        "type": "object",
        "properties": {
          "contact": {
            "description": "Indicate the contact details for this shipment. The requirements for mandatory fields and field length limitations may vary across different carriers.",
            "allOf": [
              {
                "$ref": "#/components/schemas/recipientContact"
              }
            ],
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping/recipent/recipent-contact.html"
            }
          },
          "address": {
            "description": "This is detailed information on physical location. The requirements for mandatory fields and field length limitations may vary across different carriers.",
            "allOf": [
              {
                "$ref": "#/components/schemas/recipientAddress"
              }
            ],
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping/recipent/recipent-address.html"
            }
          }
        },
        "required": [
          "contact",
          "address"
        ]
      },
      "payor_contact": {
        "type": "object",
        "properties": {
          "personName": {
            "description": "The name of a contact person at this address.",
            "type": "string",
            "maxLength": 35,
            "example": "1 Collection Point Name (Test 1)"
          },
          "phoneNumber": {
            "description": "The phone number of a contact person at this address. The format of this phone number varies depending on the country.",
            "type": "string",
            "maxLength": 25,
            "example": "1234-123456789"
          },
          "phoneExtension": {
            "description": "Specify contact phone extension. Maximum length is 6. This field is only applicable to US, `UPS` supports up to 4 digits.",
            "type": "string",
            "maxLength": 6,
            "example": 1234
          },
          "companyName": {
            "description": "Specify contact company name. Maximum length is 35.",
            "type": "string",
            "maxLength": 35,
            "example": "1 Collection Point Name (Test 1)"
          },
          "emailAddress": {
            "description": "Specify contact email address. Maximum length is 40.",
            "type": "string",
            "maxLength": 40,
            "example": "TEST@TEST.COM"
          }
        }
      },
      "payor_address": {
        "type": "object",
        "properties": {
          "countryCode": {
            "description": "This is the two-letter country code. The difference between each carrier is as follows.\n\n > **UPS** : Required when paymentType is THIRD_PARTY.",
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "example": "GB",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html"
            }
          },
          "stateOrProvinceCode": {
            "description": "This is a placeholder for state or province code.\n\n > **Note:** This field is only applicable if the carrier is FedEx.",
            "type": "string",
            "maxLength": 35,
            "example": "TEST"
          },
          "city": {
            "description": "The name of city, town of the recipient.Max length is 35.\n\n > **Note:** This field is only applicable if the carrier is FedEx.",
            "type": "string",
            "maxLength": 35,
            "example": "155 COLLECTION TOWN"
          },
          "zipCode": {
            "description": "This is the postal code. Validity check exists. The difference between each carrier is as follows.\n\n > **UPS** : Required when paymentType is THIRD_PARTY or RECIPIENT.",
            "type": "string",
            "maxLength": 10,
            "example": "SL7 1TB"
          },
          "streetLine1": {
            "description": "This is the combination of number, street name, etc. Maximum length per line is 35.\n\n > **Note:** This field is only applicable if the carrier is FedEx.",
            "type": "string",
            "maxLength": 35,
            "example": "155 COLLECTION STREET 1"
          },
          "streetLine2": {
            "description": "This is the combination of number, street name, etc. Maximum length per line is 35. \n\n > **Note:** This field is only applicable if the carrier is FedEx.",
            "type": "string",
            "maxLength": 35,
            "example": "TEST"
          },
          "streetLine3": {
            "description": "This is the combination of number, street name, etc. Maximum length per line is 35.\n\n > **Note:** This field is only applicable if the carrier is FedEx.",
            "type": "string",
            "maxLength": 35,
            "example": "TEST3"
          },
          "addressType": {
            "description": "Indicate this address type, Only `RESIDENTIAL` means residential (private).",
            "type": "string",
            "enum": [
              "RESIDENTIAL",
              "BUSINESS",
              "PARCELSHOP"
            ],
            "example": "RESIDENTIAL"
          }
        }
      },
      "payor": {
        "type": "object",
        "properties": {
          "contact": {
            "description": "This is detailed information on physical location. This field is only applicable if the carrier is FedEx.",
            "allOf": [
              {
                "$ref": "#/components/schemas/payor_contact"
              }
            ]
          },
          "address": {
            "description": "Indicate the contact details for this shipment. Required when the carrier is UPS and the paymentType is THIRD_PARTY or RECIPIENT.",
            "allOf": [
              {
                "$ref": "#/components/schemas/payor_address"
              }
            ]
          },
          "accountNumber": {
            "type": "string",
            "description": "This field is used to bill shipping costs to a third party. The difference between each carrier is as follows.\n\n > **UPS**: The number of digits must be 6."
          }
        },
        "required": [
          "accountNumber"
        ]
      },
      "payment_options": {
        "type": "object",
        "properties": {
          "paymentType": {
            "type": "string",
            "enum": [
              "SENDER",
              "RECIPIENT",
              "THIRD_PARTY",
              "COLLECT"
            ],
            "description": "Specifies the payment Type.\n\n > **Note**: The payment type `COLLECT` is applicable only for FedEx Ground shipments."
          },
          "payor": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/payor"
              }
            ],
            "description": "Payor is mandatory when the paymentType is `RECIPIENT`, `THIRD_PARTY` or `COLLECT`.\n\n > **Note：**\n   > - For the paymentType `RECIPIENT`, `THIRD_PARTY`, and `COLLECT`, the accountNumber is mandatory for FedEx in the United States.\n > - For the paymentType `RECIPIENT` in UPS in the United States, both the zipCode and accountNumber are mandatory.\n > - For the paymentType `THIRD_PARTY` in UPS in the United States, the zipCode, countryCode, and accountNumber are mandatory."
          }
        },
        "required": [
          "paymentType"
        ]
      },
      "contact": {
        "type": "object",
        "properties": {
          "personName": {
            "description": "The name of a contact person at this address.",
            "type": "string",
            "maxLength": 35,
            "example": "1 Collection Point Name (Test 1)"
          },
          "phoneNumber": {
            "description": "The phone number of a contact person at this address. The format of this phone number varies depending on the country. The difference between each carrier is as follows.\n\n > - **FedEx** : Required, Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers.\n >   Note: For US and CA, a phone number must have exactly 10 digits, plus an optional leading country code of '1' or '+1'. Example: 918xxxxx890\n > - **UPS** : Maximum length is 15.",
            "type": "string",
            "maxLength": 25,
            "example": "1234-123456789"
          },
          "phoneExtension": {
            "description": "Specify contact phone extension. Maximum length is 6. This field is only applicable to US, `UPS` supports up to 4 digits.",
            "type": "string",
            "maxLength": 6,
            "example": 1234
          },
          "companyName": {
            "description": "Specify contact company name. Maximum length is 35.",
            "type": "string",
            "maxLength": 35,
            "example": "1 Collection Point Name (Test 1)"
          },
          "emailAddress": {
            "description": "Specify contact email address. Maximum length is 40.",
            "type": "string",
            "maxLength": 40,
            "example": "TEST@TEST.COM"
          }
        },
        "required": [
          "personName"
        ]
      },
      "returnAddress": {
        "type": "object",
        "properties": {
          "countryCode": {
            "description": "This is the two-letter country code.",
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "example": "GB",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html"
            }
          },
          "stateOrProvinceCode": {
            "description": "This is a placeholder for state or province code. Required when used for US.",
            "type": "string",
            "maxLength": 35,
            "example": "TEST"
          },
          "city": {
            "description": "The name of city, town of the recipient.Max length is 35.",
            "type": "string",
            "maxLength": 35,
            "example": "155 COLLECTION TOWN"
          },
          "zipCode": {
            "description": "This is the postal code. Validity check exists. The difference between each carrier is as follows.\n\n > - **UPS** : Support 5 or 9 bits.",
            "type": "string",
            "maxLength": 10,
            "example": "SL7 1TB"
          },
          "streetLine1": {
            "description": "This is the combination of number, street name, etc. Maximum length per line is 35.",
            "type": "string",
            "maxLength": 35,
            "example": "155 COLLECTION STREET 1"
          },
          "streetLine2": {
            "description": "This is the combination of number, street name, etc. Maximum length per line is 35.",
            "type": "string",
            "maxLength": 35,
            "example": "TEST"
          },
          "streetLine3": {
            "description": "This is the combination of number, street name, etc. Maximum length per line is 35.",
            "type": "string",
            "maxLength": 35,
            "example": "TEST3"
          },
          "addressType": {
            "description": "Indicate this address type, Only `RESIDENTIAL` means residential (private).",
            "type": "string",
            "enum": [
              "RESIDENTIAL",
              "BUSINESS",
              "PARCELSHOP"
            ],
            "example": "RESIDENTIAL"
          }
        },
        "required": [
          "countryCode",
          "city",
          "zipCode",
          "streetLine1"
        ]
      },
      "returnInfo": {
        "type": "object",
        "properties": {
          "contact": {
            "description": "Indicate the contact details for this shipment.",
            "allOf": [
              {
                "$ref": "#/components/schemas/contact"
              }
            ]
          },
          "address": {
            "description": "This is detailed information on physical location.",
            "allOf": [
              {
                "$ref": "#/components/schemas/returnAddress"
              }
            ]
          }
        },
        "required": [
          "contact",
          "address"
        ]
      },
      "signature_option_gel": {
        "type": "object",
        "properties": {
          "signatureOptionType": {
            "description": "Signing service type",
            "type": "string",
            "enum": [
              "NO_SIGNATURE_REQUIRED",
              "SIGNATURE_REQUIRED"
            ],
            "example": "NO_SIGNATURE_REQUIRED",
            "default": "SIGNATURE_REQUIRED"
          }
        }
      },
      "signature_option_evri": {
        "type": "object",
        "properties": {
          "signatureOptionType": {
            "description": "Signing service type",
            "type": "string",
            "enum": [
              "NO_SIGNATURE_REQUIRED",
              "SIGNATURE_REQUIRED"
            ],
            "default": "NO_SIGNATURE_REQUIRED",
            "example": "NO_SIGNATURE_REQUIRED"
          }
        }
      },
      "signature_option_ups": {
        "type": "object",
        "properties": {
          "signatureOptionType": {
            "description": "Valid Values:\n\n - `NO_SIGNATURE_REQUIRED`: Signature is not required.\n\n - `SIGNATURE_REQUIRED`: Signature required.\n\n - `ADULT`: Adult signature required.",
            "type": "string",
            "enum": [
              "NO_SIGNATURE_REQUIRED",
              "SIGNATURE_REQUIRED",
              "ADULT"
            ],
            "example": "NO_SIGNATURE_REQUIRED",
            "default": "NO_SIGNATURE_REQUIRED"
          }
        }
      },
      "LabelSpecification_fedex": {
        "type": "object",
        "discriminator": {
          "propertyName": "imageType",
          "mapping": {
            "PNG": "#/components/schemas/fedex_png_pdf",
            "PDF": "#/components/schemas/fedex_png_pdf",
            "ZPLII": "#/components/schemas/fedex_zplii_epl2",
            "EPL2": "#/components/schemas/fedex_zplii_epl2"
          }
        },
        "properties": {
          "imageType": {
            "description": "Specify the image format used for a shipping document.",
            "type": "string",
            "enum": [
              "PNG",
              "PDF",
              "ZPLII",
              "EPL2"
            ],
            "example": "PDF"
          }
        },
        "required": [
          "imageType"
        ]
      },
      "fedex_png_pdf": {
        "type": "object",
        "description": "Indicate the label stock type used.",
        "allOf": [
          {
            "$ref": "#/components/schemas/LabelSpecification_fedex"
          },
          {
            "type": "object",
            "properties": {
              "labelStockType": {
                "type": "string",
                "example": "PAPER_4X6",
                "enum": [
                  "PAPER_4X6",
                  "PAPER_4X675",
                  "PAPER_4X8",
                  "PAPER_4X9",
                  "PAPER_7X475",
                  "PAPER_85X11_BOTTOM_HALF_LABEL",
                  "PAPER_85X11_TOP_HALF_LABEL",
                  "PAPER_LETTER",
                  "STOCK_4X6",
                  "STOCK_4X675",
                  "STOCK_4X675_LEADING_DOC_TAB",
                  "STOCK_4X675_TRAILING_DOC_TAB",
                  "STOCK_4X8",
                  "STOCK_4X9",
                  "STOCK_4X9_LEADING_DOC_TAB",
                  "STOCK_4X9_TRAILING_DOC_TAB",
                  "STOCK_4X85_TRAILING_DOC_TAB",
                  "STOCK_4X105_TRAILING_DOC_TAB"
                ]
              }
            }
          }
        ],
        "required": [
          "labelStockType"
        ]
      },
      "fedex_zplii_epl2": {
        "type": "object",
        "description": "Indicate the label stock type used.",
        "allOf": [
          {
            "$ref": "#/components/schemas/LabelSpecification_fedex"
          },
          {
            "type": "object",
            "properties": {
              "labelStockType": {
                "type": "string",
                "example": "STOCK_4X6",
                "enum": [
                  "STOCK_4X6",
                  "STOCK_4X675",
                  "STOCK_4X675_LEADING_DOC_TAB",
                  "STOCK_4X675_TRAILING_DOC_TAB",
                  "STOCK_4X8",
                  "STOCK_4X9",
                  "STOCK_4X9_LEADING_DOC_TAB",
                  "STOCK_4X9_TRAILING_DOC_TAB",
                  "STOCK_4X85_TRAILING_DOC_TAB",
                  "STOCK_4X105_TRAILING_DOC_TAB"
                ]
              }
            }
          }
        ],
        "required": [
          "labelStockType"
        ]
      },
      "LabelSpecification_gel": {
        "type": "object",
        "properties": {
          "imageType": {
            "description": "Specify the image format used for a shipping document. The label size always A6.",
            "type": "string",
            "enum": [
              "PDF"
            ],
            "example": "PDF"
          }
        },
        "required": [
          "imageType"
        ]
      },
      "LabelSpecification_gls": {
        "type": "object",
        "discriminator": {
          "propertyName": "imageType",
          "mapping": {
            "PDF": "#/components/schemas/gls_pdf",
            "ZEBRA": "#/components/schemas/gls_zebra",
            "INTERMEC": "#/components/schemas/gls_intermec",
            "DATAMAX": "#/components/schemas/gls_datamax",
            "TOSHIBA": "#/components/schemas/gls_toshiba"
          }
        },
        "description": "These are label specification details includes the image type, printer format, and label stock for label.",
        "properties": {
          "imageType": {
            "description": "Specify the image format used for a shipping document.",
            "type": "string",
            "default": "PDF",
            "enum": [
              "PDF",
              "ZEBRA",
              "INTERMEC",
              "DATAMAX",
              "TOSHIBA"
            ],
            "example": "PDF"
          }
        }
      },
      "gls_pdf": {
        "type": "object",
        "title": "PDF",
        "description": "PDF printer format",
        "allOf": [
          {
            "$ref": "#/components/schemas/LabelSpecification_gls"
          },
          {
            "type": "object",
            "properties": {
              "labelStockType": {
                "type": "string",
                "default": "NONE",
                "example": "NONE"
              }
            }
          }
        ],
        "required": [
          "templateSet"
        ]
      },
      "gls_zebra": {
        "type": "object",
        "title": "ZEBRA",
        "description": "ZEBRA printer format",
        "allOf": [
          {
            "$ref": "#/components/schemas/LabelSpecification_gls"
          },
          {
            "type": "object",
            "properties": {
              "labelStockType": {
                "type": "string",
                "default": "ZPL_200",
                "example": "ZPL_200",
                "enum": [
                  "ZPL_200",
                  "ZPL_300"
                ]
              }
            }
          }
        ]
      },
      "gls_intermec": {
        "type": "object",
        "title": "INTERMEC",
        "description": "INTERMEC printer format",
        "allOf": [
          {
            "$ref": "#/components/schemas/LabelSpecification_gls"
          },
          {
            "type": "object",
            "properties": {
              "labelStockType": {
                "type": "string",
                "default": "PF_4_I",
                "example": "PF_4_I",
                "enum": [
                  "PF_4_I",
                  "PF_4_I_200",
                  "PF_4_I_300",
                  "PF_8_D_200"
                ]
              }
            }
          }
        ],
        "required": [
          "templateSet"
        ]
      },
      "gls_datamax": {
        "type": "object",
        "title": "DATAMAX",
        "description": "DATAMAX printer format",
        "allOf": [
          {
            "$ref": "#/components/schemas/LabelSpecification_gls"
          },
          {
            "type": "object",
            "properties": {
              "labelStockType": {
                "type": "string",
                "default": "D_200",
                "example": "D_200",
                "enum": [
                  "D_200"
                ]
              }
            }
          }
        ],
        "required": [
          "templateSet"
        ]
      },
      "gls_toshiba": {
        "type": "object",
        "title": "TOSHIBA",
        "description": "TOSHIBA printer format",
        "allOf": [
          {
            "$ref": "#/components/schemas/LabelSpecification_gls"
          },
          {
            "type": "object",
            "properties": {
              "labelStockType": {
                "type": "string",
                "default": "T_200_BF",
                "example": "T_200_BF",
                "enum": [
                  "T_200_BF",
                  "T_300_BF"
                ]
              }
            }
          }
        ],
        "required": [
          "templateSet"
        ]
      },
      "LabelSpecification_whistl": {
        "type": "object",
        "properties": {
          "imageType": {
            "description": "Specify the image format used for a shipping document.",
            "type": "string",
            "enum": [
              "PDF",
              "JPG",
              "PNG",
              "EPL",
              "ZPL"
            ],
            "example": "PDF"
          },
          "labelStockType": {
            "description": "Indicate the label stock type used.",
            "type": "string",
            "enum": [
              "6",
              "8"
            ],
            "minLength": 1,
            "maxLength": 1,
            "example": "6"
          }
        },
        "required": [
          "imageType",
          "labelStockType"
        ]
      },
      "LabelSpecification_dpd_de": {
        "type": "object",
        "discriminator": {
          "propertyName": "imageType",
          "mapping": {
            "PDF": "#/components/schemas/dpd_file",
            "BARCODE_IMAGE": "#/components/schemas/dpd_file",
            "MULTIPAGE_IMAGE": "#/components/schemas/dpd_file",
            "DPL": "#/components/schemas/dpd_printer",
            "PDL": "#/components/schemas/dpd_printer",
            "ZPL": "#/components/schemas/dpd_printer"
          }
        },
        "properties": {
          "imageType": {
            "description": "Specify the image format used for a shipping document. A7 only prints return labels.",
            "type": "string",
            "enum": [
              "PDF",
              "BARCODE_IMAGE",
              "MULTIPAGE_IMAGE",
              "DPL",
              "PDL",
              "ZPL"
            ],
            "example": "PDF"
          }
        },
        "required": [
          "imageType"
        ]
      },
      "dpd_file": {
        "type": "object",
        "description": "Indicate the label stock type used.",
        "allOf": [
          {
            "$ref": "#/components/schemas/LabelSpecification_dpd_de"
          },
          {
            "type": "object",
            "properties": {
              "labelStockType": {
                "type": "string",
                "example": "A6",
                "enum": [
                  "A4",
                  "A6",
                  "A7"
                ]
              }
            }
          }
        ],
        "required": [
          "labelStockType"
        ]
      },
      "dpd_printer": {
        "type": "object",
        "description": "Indicate the label stock type used.",
        "allOf": [
          {
            "$ref": "#/components/schemas/LabelSpecification_dpd_de"
          },
          {
            "type": "object",
            "properties": {
              "labelStockType": {
                "type": "string",
                "example": "A6",
                "enum": [
                  "A6",
                  "A7"
                ]
              }
            }
          }
        ],
        "required": [
          "labelStockType"
        ]
      },
      "LabelSpecification_dpd_uk": {
        "type": "object",
        "discriminator": {
          "propertyName": "imageType",
          "mapping": {
            "EPL": "#/components/schemas/dpd_uk_printer",
            "CLP": "#/components/schemas/dpd_uk_printer",
            "HTML": "#/components/schemas/dpd_uk_file"
          }
        },
        "properties": {
          "imageType": {
            "description": "Valid Values:\n\n - `EPL`: Intended for use with Eltron Printer / Or certain printer models that support EPL emulation.\n\n - `CLP`: For use with Citizen Thermal Printers.\n\n - `HTML`: Plain text HTML output, intended for printing to A4 laser Printer on A4 stationary.\n\n ps: Laser/thermal printer overall bar code size minimum: 91.5mm x 25mm height.",
            "type": "string",
            "enum": [
              "EPL",
              "CLP",
              "HTML"
            ],
            "example": "CLP"
          }
        },
        "required": [
          "imageType"
        ]
      },
      "dpd_uk_printer": {
        "type": "object",
        "description": "Indicate the label stock type used.",
        "allOf": [
          {
            "$ref": "#/components/schemas/LabelSpecification_dpd_uk"
          },
          {
            "type": "object"
          }
        ]
      },
      "dpd_uk_file": {
        "type": "object",
        "description": "Indicate the label stock type used.",
        "allOf": [
          {
            "$ref": "#/components/schemas/LabelSpecification_dpd_uk"
          },
          {
            "type": "object"
          }
        ]
      },
      "LabelSpecification_ups": {
        "type": "object",
        "discriminator": {
          "propertyName": "imageType",
          "mapping": {
            "PNG": "#/components/schemas/ups_file",
            "GIF": "#/components/schemas/ups_file",
            "EPL": "#/components/schemas/ups_printer",
            "ZPL": "#/components/schemas/ups_printer",
            "SPL": "#/components/schemas/ups_printer"
          }
        },
        "properties": {
          "imageType": {
            "description": "Specify the image format used for a shipping document.",
            "type": "string",
            "enum": [
              "PNG",
              "GIF",
              "EPL",
              "ZPL",
              "SPL"
            ],
            "example": "GIF"
          }
        },
        "required": [
          "imageType"
        ]
      },
      "ups_file": {
        "type": "object",
        "description": "Indicate the label stock type used.",
        "allOf": [
          {
            "$ref": "#/components/schemas/LabelSpecification_ups"
          },
          {
            "type": "object"
          }
        ]
      },
      "ups_printer": {
        "type": "object",
        "description": "Indicate the label stock type used. IN_4_6 means 4*6 inches. IN_4_8 means 4*8 inches.",
        "allOf": [
          {
            "$ref": "#/components/schemas/LabelSpecification_ups"
          },
          {
            "type": "object",
            "properties": {
              "labelStockType": {
                "type": "string",
                "example": "IN_4_6",
                "enum": [
                  "IN_4_6",
                  "IN_4_8"
                ]
              }
            }
          }
        ],
        "required": [
          "labelStockType"
        ]
      },
      "mps_fedex": {
        "type": "object",
        "title": "",
        "additionalProperties": false,
        "properties": {
          "totalPackageCount": {
            "type": "number",
            "default": 1,
            "description": "For an Multiple-Piece Shipping, this is the total number of packages in the shipment.Applicable for parent shipment for one label at a time shipments.",
            "example": 25
          },
          "masterTrackingNumber": {
            "type": "string",
            "description": "This is the number associated with the package that is used to track it.For child shipment of an oneLabelAtATime  shipments,this should be same as the masterTrackingNumber of the parent shipment.\n\n > **Note:** When the associated masterTrackingNumber is specified, it is only valid when oneLabelAtATime is true.",
            "example": "176XXXXXXXXX"
          },
          "oneLabelAtATime": {
            "type": "boolean",
            "default": false,
            "description": "This flag is used to specify if the shipment is singleshot Multiple-Piece Shipping or one Label at a time,  piece by piece shipment. Default is false. If true, one label at a time is processed.\n\n > **Note:** When this is true, the number of `itemLines` can only be 1."
          }
        }
      },
      "special_service": {
        "type": "object",
        "description": "These are special services that are available at the package level for some or all service types.",
        "properties": {
          "specialServiceTypes": {
            "description": "Indicate the types of special services requested for the shipment.",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping/dangerous.html"
            },
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "DANGEROUS_GOODS",
                "PACKAGING"
              ]
            },
            "example": [
              "DANGEROUS_GOODS"
            ]
          },
          "specialServiceAttributeList": {
            "description": "These are special services dynamic fields",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "description": "click here to see Package Special Service Types",
                  "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping/dangerous.html"
                  },
                  "type": "string",
                  "example": "age"
                },
                "value": {
                  "description": "click here to see Package Special Service Types",
                  "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping/dangerous.html"
                  },
                  "type": "string",
                  "example": "17"
                }
              },
              "required": [
                "key"
              ]
            }
          }
        },
        "required": [
          "specialServiceTypes"
        ]
      },
      "CustomerReference": {
        "type": "object",
        "description": "Custom messages to print on the shipping label for the package. These are typically used to print invoice numbers, product numbers, or other internal reference numbers. Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.",
        "properties": {
          "ref1": {
            "type": "string",
            "description": "Refer to field 1, there are differences between various logistics companies, see the external link for details.",
            "example": "RB1-UB-20220221-18853"
          },
          "ref2": {
            "type": "string",
            "description": "Refer to field 2, there are differences between various logistics companies, see the external link for details.",
            "example": "W44616989"
          },
          "ref3": {
            "type": "string",
            "description": "Refer to field 3, there are differences between various logistics companies, see the external link for details.",
            "example": "W44616989"
          },
          "ref4": {
            "type": "string",
            "description": "Refer to field 4, there are differences between various logistics companies, see the external link for details.",
            "example": "W44616989"
          },
          "ref5": {
            "type": "string",
            "description": "Refer to field 5, there are differences between various logistics companies, see the external link for details.",
            "example": "W44616989"
          }
        }
      },
      "ItemLine": {
        "type": "object",
        "properties": {
          "itemTransactionId": {
            "description": "This element allows you to assign a unique identifier to your package. This element is also returned in the reply and helps you match the request to the reply.\n\n > **Note:** The itemTransactionId is consistent with the business unique identifier used in the interface for getGigaTrackNumberBatch API, which will affect the uniqueness of giga tracking numbers.",
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "example": "test-xxxx-xxxxxxxx"
          },
          "sequenceNumber": {
            "type": "number",
            "description": "Used only with individual packages as a unique identifier of each requested package. \n\n > - Required for Multiple-Piece Shipping.\n > - The sequenceNumber for master package must be equal to 1 in case of Multiple-Piece Shipping.\n > - Duplication is not recommended in the case of Multiple-Piece Shipping.\n > - Currently this field is only applicable to FedEx.",
            "example": 1
          },
          "packageCode": {
            "type": "string",
            "default": "CUSTOM_PACKAGE",
            "description": "The package type, such as `THICK_ENVELOPE`, `SMALL_FLAT_RATE_BOX`, `LARGE_PACKAGE`, etc. The code `CUSTOM_PACKAGE` indicates a custom or unknown package type. current version is not used.",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/other/guide-to-reading.html"
            }
          },
          "itemCode": {
            "description": "sku",
            "type": "string",
            "minLength": 1,
            "example": "TEST"
          },
          "weight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Weight"
              }
            ],
            "description": "These are the package weight details.",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping/size-and-weight.html"
            }
          },
          "dimensions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Dimensions"
              }
            ],
            "description": "Indicate the dimensions of the package.\n\n - Dimensions are optional but when added, then all three dimensions must be indicated.\n \n\n > **Note:** Required if current carrier is WHISTL, FedEx.",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping/size-and-weight.html"
            }
          },
          "declaredInfo": {
            "type": "object",
            "description": "This is the Declared Value of any shipment.This is including, but not limited to any loss, damage, delay, misdelivery, any failure to provide information, or misdelivery of information related to the Shipment.",
            "properties": {
              "currency": {
                "type": "string",
                "enum": [
                  "USD",
                  "EUR",
                  "JPY",
                  "GBP"
                ],
                "description": "The currencies that are supported by GIGALOGISTICS."
              },
              "amount": {
                "type": "number",
                "minimum": 0,
                "description": "The monetary amount, in the specified currency."
              }
            },
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping/declared-Info.html"
            }
          },
          "specialService": {
            "allOf": [
              {
                "$ref": "#/components/schemas/special_service"
              }
            ]
          },
          "customerReference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerReference"
              }
            ],
            "description": "This is a customer reference type. The value specified here for the element is printed on the Commercial Invoice only for tracking and label information.",
            "externalDocs": {
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping-labels/custom-label-messages.html",
              "description": "Click to view customer reference limit"
            }
          }
        },
        "required": [
          "itemTransactionId",
          "itemCode",
          "weight"
        ]
      },
      "tax_indentifiers": {
        "type": "object",
        "title": "",
        "additionalProperties": false,
        "properties": {
          "taxableEntityType": {
            "title": "taxable_entity_type",
            "type": "string",
            "enum": [
              "SHIPPER",
              "RECIPIENT"
            ],
            "description": "The taxable entity type for this tax item. Valid values include the following.\n\n | Value     | Description \n |---------|----------------\n |`SHIPPER`  |  The shipper is responsible for this tax.    \n  |`RECIPIENT`  | The recipient of the shipment is responsible for this tax.\n"
          },
          "identifierType": {
            "title": "identifier_type",
            "type": "string",
            "enum": [
              "VAT",
              "EORI",
              "SSN",
              "EIN",
              "TIN",
              "IOSS",
              "PAN",
              "VOEC"
            ],
            "description": "The carrier service used to ship the package.\n\n |Identifier Type     | Service Name \n |---------|----------------\n |`VAT`  |  The tax identifier is a Value Added Tax.\n  |`EORI`  | The tax identifier is an Economic Operators Registration and Identification Number (EORI).\n |`SSN`  | The tax identifier is a Social Security Number.\n |`EIN` | The tax identifier is an Employer Identification Number (EIN).\n |`TIN` | The tax identifier is a Tax Identification Number (TIN).\n |`IOSS`    | The tax identifier is an Import One-Stop Shop (IOSS).  \n |`PAN`  | The tax identifier is a Permanent Account Number (PAN).\n |`VOEC`  | The tax identifier is a Norwegian VAT On E-Commerce(VOEC).\n"
          },
          "issuingAuthority": {
            "type": "string",
            "description": "The authority that issued this tax. This must be a valid 2 character [country code](https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html)."
          },
          "value": {
            "type": "string",
            "description": "The value of the identifier"
          }
        },
        "required": [
          "taxableEntityType",
          "identifierType",
          "issuing_authority",
          "value"
        ]
      },
      "customsItems_dpd_uk": {
        "type": "object",
        "required": [
          "referToItemTransactionId",
          "description",
          "quantity",
          "value",
          "harmonizedTariffCode",
          "countryOfOrigin",
          "weight"
        ],
        "properties": {
          "referToItemTransactionId": {
            "type": "string",
            "description": "refer to which package by ItemTransactionId.",
            "example": "test-xxxx-xxxxxxxx"
          },
          "description": {
            "type": "string",
            "description": "A description of the item. Maximum length is 200.",
            "example": "item detailed description"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of this item in the shipment. Minimum length is 1, Maximum length is 99999.",
            "example": 1
          },
          "value": {
            "type": "object",
            "required": [
              "amount",
              "currency"
            ],
            "properties": {
              "amount": {
                "type": "number",
                "format": "double",
                "description": "The monetary amount, in the specified currency. Minimum length is 0.01, Maximum length is 9999999.99.",
                "example": 5.3
              },
              "currency": {
                "type": "string",
                "description": "The currencies that are supported by ShipEngine are the ones that specified by ISO 4217: https://www.iso.org/iso-4217-currency-codes.html",
                "example": "EUR"
              }
            }
          },
          "harmonizedTariffCode": {
            "type": "string",
            "description": "The Harmonized Tariff Code of this item. Maximum length is 8.",
            "example": 91234000
          },
          "countryOfOrigin": {
            "type": "string",
            "description": "The two-letter ISO 3166-1 country code where this item originated.",
            "example": "UK"
          },
          "fabricContent": {
            "type": "string",
            "description": "Description of the product fabric being shipped. Maximum length is 200.",
            "example": "Woven 100% silk"
          },
          "weight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Weight"
              }
            ],
            "description": "The unit weight of the customs items. value Minimum length is 0.01, Maximum length is 9999999.99."
          },
          "sku": {
            "type": "string",
            "description": "The SKU (Stock Keeping Unit) of the customs item. Maximum length is 255.",
            "example": "SKU-TEST-001"
          },
          "skuDescription": {
            "type": "string",
            "description": "Description of the Custom Item's SKU. Maximum length is 40.",
            "example": "item type simple description"
          }
        }
      },
      "customs": {
        "type": "object",
        "properties": {
          "contents": {
            "type": "string",
            "default": "merchandise",
            "enum": [
              "merchandise",
              "documents",
              "gift",
              "returned_goods",
              "sample"
            ],
            "description": "The type of contents in this shipment. This may impact import duties or customs treatment."
          },
          "nonDelivery": {
            "type": "string",
            "default": "return_to_sender",
            "enum": [
              "return_to_sender",
              "treat_as_abandoned"
            ],
            "description": "Indicates what to do if a package is unable to be delivered."
          },
          "customsItems": {
            "type": "array",
            "description": "Customs declarations for each item in the shipment. The difference between each carrier is as follows.\n\n > - **DPD_UK** : Required.",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customsItems_dpd_uk"
                }
              ]
            }
          }
        }
      },
      "create_shipments_request_body": {
        "type": "object",
        "properties": {
          "carrierId": {
            "description": "The carrier account that is billed for the shipping charges.",
            "type": "string",
            "minLength": 1,
            "example": "GLSxxxxxxxxxx"
          },
          "serviceType": {
            "description": "The carrier service used to ship the package, such as `FEDEX_GROUND`, etc.",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/guides/list-carrier-service.html"
            },
            "type": "string"
          },
          "shipper": {
            "allOf": [
              {
                "$ref": "#/components/schemas/shipper"
              }
            ],
            "description": "The shipment's origin address. If you frequently ship from the same  , consider creating a warehouse. Then you can simply specify the `warehouseId` rather than the complete address each time.\n\n > **Note:** Either `warehouseId` or `shipper` must be specified.However, for some carriers, there is no need to fill in shipper information which is maintained in the carrier‘s management system. For example: EVRI, WHISTL."
          },
          "recipient": {
            "description": "The recipient's mailing address",
            "allOf": [
              {
                "$ref": "#/components/schemas/recipient"
              }
            ]
          },
          "paymentOption": {
            "description": "Specifies the payment details specifying the method and means of payment to carrier for providing shipping services. The difference between each carrier is as follows.\n\n > - **FedEx** : Required.\n > - **UPS** : Required.",
            "allOf": [
              {
                "$ref": "#/components/schemas/payment_options"
              }
            ]
          },
          "warehouseId": {
            "type": "string",
            "default": null,
            "allOf": [
              {
                "$ref": "#/components/schemas/gg_id"
              }
            ],
            "description": "The [warehouse](https://platform-staging.gigacloudlogistics.com/docs/guide/other/guide-to-reading.html) that the shipment is being shipped from. "
          },
          "returnAddress": {
            "type": "object",
            "description": "The return address for this shipment. European logistics is not applicable, if there is a return, it will be returned to the shipping address.",
            "allOf": [
              {
                "$ref": "#/components/schemas/returnInfo"
              }
            ]
          },
          "signatureOption": {
            "type": "object",
            "description": "Indicate the Signature Type.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/signature_option_fedex"
              },
              {
                "$ref": "#/components/schemas/signature_option_gel"
              },
              {
                "$ref": "#/components/schemas/signature_option_evri"
              },
              {
                "$ref": "#/components/schemas/signature_option_ups"
              }
            ]
          },
          "labelSpecification": {
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LabelSpecification_fedex"
              },
              {
                "$ref": "#/components/schemas/LabelSpecification_gel"
              },
              {
                "$ref": "#/components/schemas/LabelSpecification_gls"
              },
              {
                "$ref": "#/components/schemas/LabelSpecification_whistl"
              },
              {
                "$ref": "#/components/schemas/LabelSpecification_dpd_de"
              },
              {
                "$ref": "#/components/schemas/LabelSpecification_dpd_uk"
              },
              {
                "$ref": "#/components/schemas/LabelSpecification_ups"
              }
            ],
            "externalDocs": {
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping-labels/label-description.html",
              "description": "Find more info here"
            }
          },
          "multiplePieceShipping": {
            "type": "object",
            "description": "In the case of Multiple-Piece Shipping, Indicates the tracking details of the package. Only applicable if the carrier is FedEx.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/mps_fedex"
              }
            ]
          },
          "itemLines": {
            "type": "array",
            "description": "The packages in the shipment.\n\n > **Note:** Some carriers only allow one package per shipment. If you attempt to create a multi-package shipment for a carrier that doesn't allow it, an error will be returned.For example: DPD_UK, etc.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ItemLine"
                }
              ]
            }
          },
          "taxIdentifiers": {
            "type": "array",
            "description": "The difference between each carrier is as follows.\n\n > - **DPD_UK**: Required, Required combination: EORI(SHIPPER) + IOSS(SHIPPER). ",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/tax_indentifiers"
                }
              ]
            }
          },
          "customs": {
            "description": "Customs information. This is usually only needed for international shipments. The difference between each carrier is as follows.\n\n > - **DPD_UK** : Required.",
            "allOf": [
              {
                "$ref": "#/components/schemas/customs"
              }
            ]
          }
        },
        "required": [
          "transactionId",
          "carrierId",
          "serviceType",
          "recipient",
          "itemLines"
        ]
      },
      "PackageDoc": {
        "type": "object",
        "properties": {
          "contentType": {
            "description": "Indicates the type of document/label.",
            "type": "string",
            "enum": [
              "LABEL",
              "HAZMAT_LABEL"
            ],
            "example": "LABEL"
          },
          "imageType": {
            "description": "Format of the label. For requests, please use get service to see available formats",
            "type": "string",
            "example": "pdf"
          },
          "fileUrl": {
            "description": "The URL of the shipping document/label.\n\n > **Note:** When fileUrl is null, fileBase64 must have a value, otherwise, when fileUrl is not empty, fileBase64 is null",
            "type": "string",
            "example": "https://XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
          },
          "fileBase64": {
            "description": "Base64 string representing label data. Decode this from base64 to get your label in the right encoding. E.g. a png label decoded from base64 and saved as a .png file will work as a .png image",
            "type": "string",
            "example": "..."
          }
        },
        "required": [
          "itemTransactionId",
          "trackingNumber",
          "imageType",
          "contentType"
        ]
      },
      "Item": {
        "type": "object",
        "properties": {
          "itemTransactionId": {
            "description": "This element has a unique identifier added in your request, helps you match the request to the reply.",
            "type": "string",
            "example": "test-xxxx-xxxxxxxx"
          },
          "itemCode": {
            "description": "sku",
            "type": "string",
            "minLength": 1,
            "example": "test"
          },
          "gigaTrackingNumber": {
            "description": "The GIGA tracking number for the package. A string that uniquely identifies the shipment",
            "type": "string",
            "minLength": 1,
            "example": "XXXXXXXXXXXXXXXXXXX"
          },
          "trackingNumber": {
            "description": "The tracking number for the package. The format depends on the carrier.",
            "type": "string",
            "minLength": 1,
            "example": "JDXXXXXXXXXXXXXXXXX"
          },
          "masterTrackingNumber": {
            "description": "This is a master tracking number for the shipment. The format depends on the carrier.",
            "type": "string",
            "minLength": 1,
            "example": "JDXXXXXXXXXXXXXXXXX"
          },
          "declaredInfo": {
            "type": "object",
            "description": "This is the Declared Value of any shipment.This is including, but not limited to any loss, damage, delay, misdelivery, any failure to provide information, or misdelivery of information related to the Shipment.",
            "properties": {
              "currency": {
                "type": "string",
                "enum": [
                  "USD",
                  "EUR",
                  "JPY",
                  "GBP"
                ],
                "description": "The currencies that are supported by GIGALOGISTICS."
              },
              "amount": {
                "type": "number",
                "minimum": 0,
                "description": "The monetary amount, in the specified currency."
              }
            }
          },
          "specialService": {
            "allOf": [
              {
                "$ref": "#/components/schemas/special_service"
              }
            ]
          },
          "customerReference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerReference"
              }
            ],
            "description": "This is a customer reference type. The value specified here for the element is printed on the Commercial Invoice only for tracking and label information.",
            "externalDocs": {
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping-labels/custom-label-messages.html",
              "description": "[Click to view customer reference limit](https://platform-staging.gigacloudlogistics.com/docs/guide/shipping-labels/custom-label-messages.html)"
            }
          },
          "packageDocuments": {
            "description": "These are package documents returned in the response.",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PackageDoc"
                }
              ]
            }
          }
        },
        "required": [
          "itemTransactionId",
          "itemCode",
          "trackingNumber",
          "packageDocuments",
          "gigaTrackingNumber"
        ]
      },
      "Data": {
        "type": "object",
        "properties": {
          "transactionId": {
            "description": "The transaction id you specified.",
            "type": "string"
          },
          "carrierId": {
            "description": "The carrier account that is billed for the shipping charges.",
            "type": "string",
            "minLength": 1,
            "example": "GLSxxxxxxxxx"
          },
          "carrierCode": {
            "description": "Return the code of a Carrier operating company",
            "type": "string",
            "enum": [
              "FedEx",
              "WHISTL",
              "DPD_DE",
              "DPD_UK",
              "GLS",
              "GEL",
              "EVRI"
            ],
            "example": "FedEx"
          },
          "serviceType": {
            "description": "The carrier service used to ship the package, such as `FEDEX_GROUND`, etc.",
            "externalDocs": {
              "description": "Find more info here",
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/shipping/specify-carrier-service.html"
            },
            "type": "string"
          },
          "paymentOption": {
            "description": "Specifies the payment details specifying the method and means of payment to carrier for providing shipping services.",
            "allOf": [
              {
                "$ref": "#/components/schemas/payment_options"
              }
            ]
          },
          "signatureOption": {
            "type": "object",
            "description": "Indicate the Signature Type.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/signature_option_fedex"
              },
              {
                "$ref": "#/components/schemas/signature_option_gel"
              },
              {
                "$ref": "#/components/schemas/signature_option_evri"
              },
              {
                "$ref": "#/components/schemas/signature_option_ups"
              }
            ]
          },
          "labelSpecification": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LabelSpecification_fedex"
              },
              {
                "$ref": "#/components/schemas/LabelSpecification_gel"
              },
              {
                "$ref": "#/components/schemas/LabelSpecification_gls"
              },
              {
                "$ref": "#/components/schemas/LabelSpecification_whistl"
              },
              {
                "$ref": "#/components/schemas/LabelSpecification_dpd_de"
              },
              {
                "$ref": "#/components/schemas/LabelSpecification_dpd_uk"
              },
              {
                "$ref": "#/components/schemas/LabelSpecification_ups"
              }
            ]
          },
          "taxIdentifiers": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/tax_indentifiers"
                }
              ]
            }
          },
          "transactionShipments": {
            "type": "array",
            "description": "An array of shipments that were created.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Item"
                }
              ]
            }
          }
        },
        "required": [
          "transactionId",
          "carrierId",
          "carrierCode",
          "serviceType",
          "transactionShipments"
        ]
      },
      "SuccessResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The descriptive data of the requested shipment.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Data"
              }
            ]
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "itemError": {
        "type": "object",
        "properties": {
          "itemTransactionId": {
            "description": "This element has a unique identifier added in your request, helps you match the request to the reply.",
            "type": "string",
            "example": "test-xxxx-xxxxxxxx"
          },
          "code": {
            "description": "Indicates the error code.",
            "type": "string",
            "example": "301-02-C-001"
          },
          "message": {
            "description": "Indicates the description of API error alert message.",
            "type": "string",
            "example": "The Address Line 1 field is required.The City field is required."
          }
        },
        "required": [
          "itemTransactionId",
          "code",
          "message"
        ]
      },
      "failData": {
        "type": "object",
        "properties": {
          "errors": {
            "description": "This is wrong purchase collection",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/itemError"
                }
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "PartSuccessResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The descriptive data of the requested shipment.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Data"
              },
              {
                "$ref": "#/components/schemas/failData"
              }
            ]
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "AsyncShipmentSuccessResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "A unique identifier for subsequent asynchronously fetched results.",
            "type": "string",
            "example": 6887945876680704
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "cencel_shipments_request_body": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "description": "The account number (account value) associated with the shipment."
          },
          "trackingNumber": {
            "type": "string",
            "description": "This is an unique number assigned by FedEx to the packages for tracking.<br/> Example: `794953555571`",
            "example": "794953555571"
          }
        },
        "required": [
          "accountNumber",
          "trackingNumber"
        ]
      },
      "CancelData": {
        "type": "object",
        "properties": {
          "cancelledShipment": {
            "description": "Indicates whether the shipment has been cancelled or not. If the value is True, then it indicates that the shipment has been cancelled.",
            "type": "boolean",
            "example": false
          },
          "message": {
            "description": "The success message generated during cancellation request for Shipment.",
            "type": "string"
          }
        },
        "required": [
          "cancelledShipment"
        ]
      },
      "CancelSuccessResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The descriptive data of the requested shipment.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CancelData"
              }
            ]
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "pickup_create_request_body": {
        "type": "object",
        "properties": {
          "gigaTrackingNumber": {
            "type": "string",
            "description": "The GIGA tracking number for the package. A string that uniquely identifies the shipment.<br/> Example: `GCL125635847`",
            "example": "GCL125635847"
          }
        },
        "required": [
          "gigaTrackingNumber"
        ]
      },
      "PickupSuccessResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          }
        },
        "required": [
          "success"
        ]
      },
      "CustomerAddress": {
        "type": "object",
        "description": "customer address info",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of a contact person at this address. This field may be set instead of - or in addition to - the `companyName` field.",
            "minLength": 1,
            "maxLength": 35,
            "example": "CA1"
          },
          "phone": {
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "description": "The phone number of a contact person at this address. The format of this phone number varies depending on the country.",
            "example": 123456789
          },
          "phoneExtension": {
            "type": "string",
            "maxLength": 6,
            "description": "Specify contact phone extension. Maximum length is 6.",
            "example": 1234
          },
          "companyName": {
            "type": "string",
            "maxLength": 35,
            "description": "If this is a business address, then the company name should be specified here.",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "This is the email address.",
            "maxLength": 40,
            "example": "John Doe"
          },
          "addressLine1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "The first line of the street address. For some addresses, this may be the only line. Other addresses may require 2 or 3 lines.",
            "example": "1999 Bishop Grandin Blvd."
          },
          "addressLine2": {
            "type": "string",
            "maxLength": 35,
            "description": "The second line of the street address.  For some addresses, this line may not be needed.",
            "example": "Unit 408."
          },
          "addressLine3": {
            "type": "string",
            "maxLength": 35,
            "description": "The third line of the street address.  For some addresses, this line may not be needed.",
            "example": "Building #7"
          },
          "cityLocality": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "The name of the city or locality",
            "example": "Winnipeg"
          },
          "stateProvince": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n\n > **Note:** Required when country is `US`",
            "example": "Manitoba"
          },
          "postalCode": {
            "type": "string",
            "minLength": 1,
            "maxLength": 10,
            "example": "56234",
            "description": "postal code"
          },
          "countryCode": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "description": "The two-letter [country code](https://platform-staging.gigacloudlogistics.com/docs/guide/api-reference/country-code.html)",
            "example": "US"
          },
          "addressResidentialIndicator": {
            "type": "boolean",
            "description": "Indicates whether this is a residential address.",
            "example": false
          }
        },
        "required": [
          "name",
          "addressLine1",
          "cityLocality",
          "postalCode",
          "countryCode",
          "addressResidentialIndicator"
        ]
      },
      "Warehouse": {
        "type": "object",
        "description": "A warehouse list response body",
        "properties": {
          "id": {
            "description": "A string that uniquely identifies the warehouse",
            "type": "string",
            "maxLength": 20,
            "example": "xx-152452145251"
          },
          "name": {
            "description": "Name of the warehouse, Duplicates are not allowed.",
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "example": "CA1"
          },
          "type": {
            "description": "Type of the warehouse",
            "type": "string",
            "enum": [
              "ZY",
              "THIRD_PARTY",
              "ONSITE"
            ],
            "example": "ZY"
          },
          "nickName": {
            "description": "Alias of the warehouse",
            "type": "string",
            "maxLength": 25,
            "example": "CA1"
          },
          "originAddress": {
            "description": "The origin address of the warehouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerAddress"
              }
            ]
          },
          "returnAddress": {
            "description": "The return address associated with the warehouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerAddress"
              }
            ]
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "originAddress"
        ]
      },
      "WhListSuccessResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The array of warehouses returned by the API call",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Warehouse"
                }
              ]
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "AddAndUpdateReq": {
        "type": "object",
        "title": "create A warehouse Request",
        "description": "create A warehouse Request",
        "properties": {
          "name": {
            "description": "Name of the warehouse, Duplicates are not allowed.",
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "example": "Zero Cool HQ"
          },
          "type": {
            "description": "Type of the warehouse",
            "type": "string",
            "enum": [
              "ZY",
              "THIRD_PARTY",
              "ONSITE"
            ],
            "example": "ZY"
          },
          "nickName": {
            "description": "Alias of the warehouse",
            "type": "string",
            "maxLength": 25,
            "example": "CA1"
          },
          "originAddress": {
            "description": "The origin address of the warehouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerAddress"
              }
            ]
          },
          "returnAddress": {
            "description": "The return address associated with the warehouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerAddress"
              }
            ]
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "originAddress"
        ]
      },
      "WhOneSuccessResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The descriptive data of the requested shipment.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse"
              }
            ]
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "GetTrackingDocumentResp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "gigaTrackingNumber": {
            "description": "The GIGA tracking number for the package. A string that uniquely identifies the shipment.",
            "type": "string",
            "example": "GCL1234567890120"
          },
          "fileInfo": {
            "description": "URL and type of shipping document/label. key indicates the type, currently `1` indicates POD, value is the url path.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "int32"
            },
            "example": {
              "1": "https://xxxxx.pdf"
            }
          },
          "errorMsg": {
            "description": "The reason for the data not being queried.",
            "type": "string"
          }
        },
        "required": [
          "success",
          "gigaTrackingNumber"
        ]
      },
      "register_track_request_body": {
        "type": "object",
        "properties": {
          "bizUniqId": {
            "description": "Business unique identifier, when the logistics is regular express delivery, affects the uniqueness of the GIGA waybill number. This field is mandatory when `gigaTrackingNumber` is empty.\n\n >**Note:** Consistent with the dispatch unique identifier `itemTransactionId` in the [Create Shipments](#tag/Shipments/operation/createShipment) interface, used to determine the uniqueness of the GIGA waybill number.  If the `bizUniqId` conveyed through the transaction registration interface matches the `itemTransactionId` during the purchase transaction,  then the same GIGA waybill number as returned by the purchase transaction interface will be retrieved from the transaction history interface.",
            "type": "string",
            "maxLength": 50,
            "example": "item001"
          },
          "carrierKey": {
            "description": "The unique code of the transporter generated by DRPTool, This field is mandatory when `gigaTrackingNumber` is empty.",
            "type": "string",
            "example": "carrier_001"
          },
          "trackingNumber": {
            "description": "Official website waybill number, This field is mandatory when `gigaTrackingNumber` is empty.",
            "type": "string",
            "example": "X145632589"
          },
          "gigaTrackingNumber": {
            "description": "GIGA waybill number is generated when purchasing through the logistics center. This field can replace the combination of `carrierKey`, `trackingNumber`,  and `bizUniqId`. When all are filled, gigaTrackingNumber takes precedence.",
            "type": "string",
            "example": "GCL3354248412307"
          },
          "tag": {
            "type": "string",
            "description": "Custom label, with a maximum limit of 65535 bytes, can be filled with notes, descriptions, data identifiers, and other information.\n\n >**Note:** When using `tag` to generate an Excel statistical file, please ensure that the data format is correct. In this context, the **columnName** value corresponds to the Excel column heading. **sort** specifies Excel column sorting. **value** displays data in a table. Be careful to avoid duplicate **sort** values, as duplicates will result in only one column being generated.",
            "example": "[{\"sort\":0,\"columnName\":\"运单号\",\"value\":\"test001\"},{\"sort\":1,\"columnName\":\"物流公司\",\"value\":\"test\"},{\"sort\":2,\"columnName\":\"订单号\",\"value\":\"t2001\"},{\"sort\":3,\"columnName\":\"备注\",\"value\":\"test\"},{\"sort\":4,\"columnName\":\"店铺\",\"value\":\"t4\"},{\"sort\":9,\"columnName\":\"发货日期\",\"value\":\"2023-05-26 19:30:25\"}]"
          },
          "param": {
            "example": "xxxx",
            "type": "string",
            "maxLength": 10,
            "description": "Additional tracking parameters for the logistics tracking number (some carriers with specific requirements might need postal code or order date to query package information).",
            "externalDocs": {
              "url": "https://platform-staging.gigacloudlogistics.com/docs/guide/track/track-package.html#considerations",
              "description": "Click to view rules"
            }
          },
          "shipFrom": {
            "type": "string",
            "description": "Place of origin, generated in the order of city, state, and country. Subsequent logistics centers will update and correct based on the transaction history information.",
            "maxLength": 50,
            "example": "xx,xx,xx"
          },
          "shipTo": {
            "type": "string",
            "description": "Destination, generated in the order of city, state, and country. Subsequent logistics centers will update and correct based on the transaction history information.",
            "maxLength": 50,
            "example": "xx,xx,xx"
          }
        }
      },
      "register_reject_item": {
        "type": "object",
        "description": "The response result for the exception handling part in the request.",
        "properties": {
          "gigaTrackingNumber": {
            "description": "gigaTrackingNumber in generated or requested information",
            "type": "string",
            "maxLength": 20,
            "example": "GCL125635847"
          },
          "carrierKey": {
            "description": "carrierKey in request information",
            "type": "string",
            "example": "carrier_001"
          },
          "trackingNumber": {
            "description": "trackingNumber in request information",
            "type": "string",
            "example": "X15265874"
          },
          "bizUniqId": {
            "description": "bizUniqId in request information",
            "type": "string",
            "example": "item001"
          },
          "errorMsg": {
            "description": "Specific reasons for rejection",
            "type": "string",
            "example": "gigaTrackingNumber xxxx does not exist."
          }
        }
      },
      "register_accept_item": {
        "type": "object",
        "description": "The response result for the exception handling part in the request.",
        "properties": {
          "gigaTrackingNumber": {
            "description": "gigaTrackingNumber in generated or requested information",
            "type": "string",
            "maxLength": 20,
            "example": "GCL125635847"
          },
          "carrierKey": {
            "description": "carrierKey in request information",
            "type": "string",
            "example": "carrier_001"
          },
          "trackingNumber": {
            "description": "trackingNumber in request information",
            "type": "string",
            "example": "X15265874"
          },
          "bizUniqId": {
            "description": "bizUniqId in request information",
            "type": "string",
            "example": "item001"
          }
        },
        "required": [
          "gigaTrackingNumber"
        ]
      },
      "register_tracking_resp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The description data of the requested subscription tracking number.",
            "type": "object",
            "properties": {
              "rejected": {
                "description": "The response result for the exception handling part in the request.",
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/register_reject_item"
                    }
                  ]
                }
              },
              "accepted": {
                "description": "For normal processing of partial response results in requests.",
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/register_accept_item"
                    }
                  ]
                }
              }
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "restart_reject_item": {
        "type": "object",
        "description": "The response result for the exception handling part in the request.",
        "properties": {
          "gigaTrackingNumber": {
            "description": "gigaTrackingNumber in generated or requested information",
            "type": "string",
            "maxLength": 20,
            "example": "GCL125635847"
          },
          "errorMsg": {
            "description": "Specific reasons for rejection",
            "type": "string",
            "example": "gigaTrackingNumber xxxx does not exist."
          }
        }
      },
      "restart_tracking_resp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The description data of the requested subscription tracking number.",
            "type": "object",
            "properties": {
              "rejected": {
                "description": "The response result for the exception handling part in the request.",
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/restart_reject_item"
                    }
                  ]
                }
              },
              "accepted": {
                "description": "For normal processing of partial response results in requests.",
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The giga waybill number issued by the logistics center.",
                  "example": "GCL1234567890120"
                }
              }
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "tracking_info_resp": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Used to judge whether it is successful.",
            "type": "boolean",
            "example": true,
            "default": true
          },
          "data": {
            "description": "The description data of the requested subscription tracking number.",
            "type": "object",
            "properties": {
              "rejected": {
                "description": "The response result for the exception handling part in the request.",
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/restart_reject_item"
                    }
                  ]
                }
              },
              "accepted": {
                "description": "To handle a request normally, return a collection of results. If there are no data satisfying the conditions, return an empty collection.",
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "The response elements for Tracking by tracking number request.",
                  "properties": {
                    "gigaTrackingNumber": {
                      "description": "The GIGA tracking number for the package. A string that uniquely identifies the shipment.",
                      "type": "string",
                      "example": "GCL1234567890120"
                    },
                    "param": {
                      "description": "Additional tracking parameters for the logistics tracking number (some carriers with specific requirements might need postal code or order date to query package information).",
                      "type": "string",
                      "example": "test123"
                    },
                    "tag": {
                      "description": "Custom label, with a maximum limit of 65535 bytes, can be filled with notes, descriptions, data identifiers, and other information.",
                      "type": "string",
                      "example": "custom tag"
                    },
                    "exceptionFlag": {
                      "description": "Mark whether this node is an exception node. `S` identifies normal nodes, and `E` identifies abnormal nodes.",
                      "type": "string",
                      "enum": [
                        "S",
                        "E"
                      ],
                      "example": "S"
                    },
                    "shipFrom": {
                      "description": "Shipper address information.",
                      "type": "string",
                      "example": "BRASELTON,GA,US"
                    },
                    "shipTo": {
                      "description": "Consignee address information.",
                      "type": "string",
                      "example": "WEATHERLY,PA,US"
                    },
                    "readyPickUpDate": {
                      "description": "Scheduled Pickup Time in Timestamp Format.",
                      "type": "number",
                      "example": 1701687628000
                    },
                    "actualPickUpDate": {
                      "description": "Actual Pickup Time in Timestamp Format.",
                      "type": "number",
                      "example": 1701687628000
                    },
                    "readyDeliveryDate": {
                      "description": "Scheduled Delivery Time in Timestamp Format.",
                      "type": "number",
                      "example": 1701687628000
                    },
                    "actualDeliveryDate": {
                      "description": "Actual Delivery Time in Timestamp Format.",
                      "type": "number",
                      "example": 1701687628000
                    },
                    "readyPickUpDateUTC": {
                      "description": "Scheduled Pickup Time in UTC Format.",
                      "type": "string",
                      "example": "2023-12-01T18:15:02Z"
                    },
                    "actualPickUpDateUTC": {
                      "description": "Actual Pickup Time in UTC Format.",
                      "type": "string",
                      "example": "2023-12-01T18:15:02Z"
                    },
                    "readyDeliveryDateUTC": {
                      "description": "Scheduled Delivery Time in UTC Format.",
                      "type": "string",
                      "example": "2023-12-01T18:15:02Z"
                    },
                    "actualDeliveryDateUTC": {
                      "description": "Actual Delivery Time in UTC Format.",
                      "type": "string",
                      "example": "2023-12-01T18:15:02Z"
                    },
                    "lastNodeStatusCode": {
                      "description": "GIGA logistics status identification code, mapped by the logistics center. Valid values include the following.\n\n | Value     | Description \n |---------  |----------------\n |`1`        |NOT FOUND   \n |`2`        |INFO RECEIVED\n |`3`        |PICKED UP \n |`4`        |IN TRANSIT\n |`5`        |DELIVERED  \n |`6`        |EXCEPTION \n",
                      "type": "number",
                      "example": 4
                    },
                    "lastNodeStatusDescription": {
                      "description": "GIGA logistics status description, mapped by the logistics center. The value is Description in the **lastNodeStatusCode** description table.",
                      "type": "string",
                      "example": "IN TRANSIT"
                    },
                    "eventInfoVos": {
                      "description": "Logistics company scan event information for a shipment. Includes the list of events and/or scans applied.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Event collection node.",
                        "properties": {
                          "city": {
                            "description": "The name of the city, town, etc.",
                            "type": "string",
                            "example": "SEATTLE"
                          },
                          "stateCode": {
                            "description": "This is a placeholder for State or Province code.",
                            "type": "string",
                            "example": "CA"
                          },
                          "countryCode": {
                            "description": "Placeholder for country code for the address.",
                            "type": "string",
                            "example": "US"
                          },
                          "location": {
                            "description": "Location Identification for facilities identified by an alpha numeric location code.",
                            "type": "string",
                            "example": "SEA"
                          },
                          "eventCode": {
                            "description": "Field which holds the code identifying the type of scan event.",
                            "type": "string",
                            "example": "PU"
                          },
                          "eventTime": {
                            "description": "Date and time of the scan event. timestamp format.",
                            "type": "number",
                            "example": 1701454502000
                          },
                          "eventTimeUTC": {
                            "description": "Date and time of the scan event. UTC format.",
                            "type": "string",
                            "example": "2023-12-01T18:15:02Z"
                          },
                          "eventDescription": {
                            "description": "Field which holds the text description of the scan event.",
                            "type": "string",
                            "example": "On the way"
                          },
                          "logisticsStatusCode": {
                            "description": "GIGA logistics status identification code, mapped by the logistics center. Valid values include the following.\n\n | Value     | Description \n |---------  |----------------\n |`1`        |NOT FOUND   \n |`2`        |INFO RECEIVED\n |`3`        |PICKED UP \n |`4`        |IN TRANSIT\n |`5`        |DELIVERED  \n |`6`        |EXCEPTION \n",
                            "type": "number",
                            "example": 4
                          },
                          "logisticsStatusDescription": {
                            "description": "GIGA logistics status description, mapped by the logistics center. The value is Description in the **logisticsStatusCode** description table.",
                            "type": "string",
                            "example": "IN TRANSIT"
                          },
                          "exceptionFlag": {
                            "description": "Mark whether this node is an exception node. `S` identifies normal nodes, and `E` identifies abnormal nodes.",
                            "type": "string",
                            "enum": [
                              "S",
                              "E"
                            ],
                            "example": "S"
                          }
                        }
                      }
                    },
                    "daysAfterTransit": {
                      "description": "The number of days between the first event and the 'Successful Signing' event. Before there is no 'Successful Signing' status, this item is always 0 and does not accumulate. After successful receipt, the number of days between receipts will be displayed.",
                      "type": "number",
                      "example": 3
                    },
                    "daysAfterLastUpdate": {
                      "description": "The number of days between the last event and the latest synchronization success time without update, the cumulative count. Please note that when the logistics status is `DELIVERED` and has been delivered, this data is meaningless.",
                      "type": "number",
                      "example": 0
                    },
                    "serviceType": {
                      "description": "Service type.",
                      "type": "string",
                      "example": "FEDEX_GROUND"
                    },
                    "lastSyncTime": {
                      "description": "The last time to synchronize the logistics company.",
                      "type": "string",
                      "example": "2023-12-05T11:41:39+08:00"
                    },
                    "lastSyncSuccessfulTime": {
                      "description": "Finally successfully synchronized the time of the logistics company.",
                      "type": "string",
                      "example": "2023-12-05T11:41:39+08:00"
                    },
                    "weight": {
                      "description": "Field which holds the weight of the package.",
                      "type": "number",
                      "example": "99.2LB"
                    },
                    "dimensions": {
                      "description": "Indicate the dimensions of the package.",
                      "type": "string",
                      "example": "58*19*8 IN"
                    },
                    "volume": {
                      "description": "Indicate the volume of the package.",
                      "type": "string",
                      "example": "39 L"
                    },
                    "pieces": {
                      "description": "Field which holds the total number of pieces.",
                      "type": "number",
                      "example": 3
                    },
                    "trackingStatus": {
                      "description": "Track status information. Y - Tracking, N - Stop tracking.",
                      "type": "string",
                      "enum": [
                        "Y",
                        "N"
                      ],
                      "example": "Y"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "success",
          "data"
        ]
      }
    },
    "parameters": {
      "Authorization": {
        "name": "Authorization",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Example: `Bearer XXX` <br> This indicates the [authorization](#tag/Authentication) token for the input request."
        }
      }
    }
  }
}